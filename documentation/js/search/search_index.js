var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.028,1,0.618]],["body/components/AppComponent.html",[0,0.048,1,1.023,2,0.841,3,0.621,4,0.526,5,0.842,6,0.842,7,0.842,8,0.526,9,2.123,10,0.841,11,1.759,12,1.522,13,1.759,14,1.759,15,1.294,16,1.759,17,1.759,18,1.522,19,2.198,20,1.594,21,1.294,22,2.877,23,1.319,24,1.995,25,1.023,26,1.023,27,1.141,28,3.602,29,2.044,30,3.602,31,0.621,32,0.841,33,3.657,34,1.522,35,2.485,36,1.294,37,1.771,38,1.294,39,3.602,40,0.842,41,0.057,42,0.954,43,0.841,44,0.842,45,2.044,46,2.658,47,3.602,48,2.4,49,2.877,50,1.759,51,1.141,52,1.123,53,1.298,54,1.508,55,0.973,56,1.123,57,2.877,58,2.4,59,2.044,60,1.069,61,0.526,62,0.973,63,2.658,64,2.658,65,1.771,66,0.621,67,0.621,68,0.842,69,1.508,70,2.658,71,0.842,72,1.141,73,1.141,74,0.842,75,1.388,76,0.842,77,0.842,78,0.621,79,0.842,80,0.842,81,0.621,82,0.842,83,0.842,84,0.621,85,0.842,86,0.621,87,0.842,88,0.842,89,0.842,90,0.621,91,0.842,92,0.726,93,0.842,94,0.038,95,0.038]],["title/components/AuthUserComponent.html",[0,0.028,81,0.618]],["body/components/AuthUserComponent.html",[0,0.049,1,0.65,2,0.868,3,0.65,4,0.55,5,0.881,6,0.881,7,0.881,8,0.55,10,0.868,11,1.814,12,1.569,13,1.814,14,1.814,15,1.325,16,1.814,17,1.814,20,1.608,21,0.881,23,1.36,25,0.65,26,0.65,27,1.177,31,0.65,32,0.868,36,1.325,38,1.177,40,0.881,41,0.057,42,0.977,43,0.868,44,0.881,60,1.042,61,0.55,66,0.65,67,0.65,68,0.881,71,0.881,72,1.177,73,1.177,74,0.881,75,1.414,76,0.881,77,0.881,78,0.65,79,1.515,80,0.881,81,1.042,82,1.572,83,0.881,84,0.65,85,0.881,86,0.65,87,0.881,88,0.881,89,0.881,90,0.65,91,0.881,92,0.76,93,0.881,94,0.039,95,0.039,96,2.222,97,3.714,98,1.814,99,1.569,100,3.34,101,2.372,102,3.714,103,2.107,104,2.782,105,2.637,106,2.782,107,2.967,108,1.569,109,2.786,110,4.181,111,2.782,112,1.358,113,1.175,114,1.814,115,2.222,116,2.967,117,2.475,118,3.714,119,3.714]],["title/components/AuthorisationComponent.html",[0,0.028,78,0.618]],["body/components/AuthorisationComponent.html",[0,0.047,1,0.585,2,0.998,3,0.585,4,0.495,5,0.794,6,0.794,7,0.794,8,0.495,10,0.808,12,1.058,15,0.794,18,1.461,20,1.576,21,0.794,23,1.266,25,0.585,26,0.585,27,1.096,31,0.585,32,0.808,36,0.794,38,1.354,40,0.794,41,0.057,42,0.925,43,0.998,44,0.794,45,1.962,59,2.248,60,1.083,61,0.495,62,0.917,66,0.585,67,0.585,68,1.255,71,0.794,72,1.096,73,1.096,74,0.794,75,1.354,76,0.794,77,0.794,78,0.998,79,1.557,80,0.794,81,0.585,82,1.469,83,0.794,84,0.585,85,0.794,86,0.585,87,0.794,88,0.794,89,0.794,90,0.585,91,0.794,92,0.684,93,0.794,94,0.036,95,0.036,98,1.689,99,1.461,100,3.165,101,2.248,103,2.788,105,2.543,107,2.763,112,1.223,113,1.058,114,1.934,120,2.001,121,1.689,122,1.689,123,2.987,124,3.4,125,3.459,126,3.459,127,5.103,128,2.505,129,2.505,130,2.305,131,3.165,132,2.64,133,3.962,134,3.962,135,3.165,136,2.64,137,3.962,138,3.459,139,2.505,140,2.505,141,2.505,142,2.505,143,4.272,144,2.763]],["title/injectables/Dataservice.html",[19,1.118,145,1.293]],["body/injectables/Dataservice.html",[3,0.447,4,0.378,8,0.378,10,1.095,19,1.594,22,1.528,31,0.447,32,0.666,34,1.204,36,1.079,38,1.427,40,1.279,41,0.057,42,0.943,43,0.988,44,1.279,45,1.617,48,1.899,49,3.015,51,1.58,52,1.98,53,1.391,54,1.617,55,1.247,56,0.808,60,0.882,61,0.378,66,0.447,67,0.796,68,1.196,69,1.085,94,0.03,95,0.03,108,1.594,122,1.391,132,1.899,145,1.391,146,1.275,147,1.528,148,2.819,149,1.899,150,2.276,151,2.199,152,3.956,153,2.721,154,3.774,155,2.85,156,2.721,157,2.276,158,3.774,159,2.276,160,1.528,161,3.38,162,2.85,163,1.932,164,1.913,165,2.85,166,2.85,167,2.85,168,3.774,169,1.945,170,3.774,171,2.732,172,2.85,173,3.001,174,1.913,175,1.899,176,2.85,177,3.38,178,3.406,179,3.774,180,2.515,181,3.502,182,2.85,183,2.85,184,2.85,185,1.528,186,1.913,187,1.899,188,2.276,189,3.001,190,2.85,191,3.015,192,2.276,193,2.276,194,1.913,195,2.85,196,2.515,197,1.913,198,2.276,199,2.85,200,2.85,201,2.85,202,1.528,203,1.843,204,1.913,205,1.439,206,1.528,207,1.275,208,1.899,209,2.276,210,2.276,211,1.275,212,1.913,213,1.913,214,1.528,215,1.913,216,2.85,217,1.085,218,2.721,219,2.85,220,2.141,221,1.913,222,1.913,223,2.85,224,2.85,225,2.85,226,1.913,227,1.913,228,2.85,229,1.913,230,1.528,231,1.913,232,1.913,233,1.913,234,1.913,235,1.913,236,2.276,237,1.913,238,1.913,239,1.085,240,1.913,241,1.913,242,1.913,243,1.913,244,1.913,245,1.913]],["title/components/HomepageComponent.html",[0,0.028,84,0.618]],["body/components/HomepageComponent.html",[0,0.044,1,0.654,2,1.045,3,0.654,4,0.554,5,0.888,6,0.888,7,0.888,8,0.554,10,0.654,15,0.888,20,1.61,21,0.888,23,1.366,24,2.049,25,0.654,26,0.654,27,1.182,29,2.117,41,0.056,42,0.872,51,0.888,60,0.872,61,0.554,62,1.026,66,0.654,67,0.654,71,0.888,72,1.182,73,1.182,74,0.888,75,1.417,76,0.888,77,0.888,78,0.654,79,0.888,80,0.888,81,0.654,82,0.888,83,0.888,84,1.045,85,0.888,86,0.654,87,0.888,88,0.888,89,0.888,90,0.654,91,0.888,92,0.765,93,0.888,94,0.039,95,0.039,121,1.822,122,1.822,151,1.368,177,3.574,246,2.238,247,3.574,248,3.732,249,3.732,250,3.732,251,4.474,252,4.474,253,4.474,254,5.159,255,4.474,256,4.474,257,4.474,258,4.474,259,3.732,260,4.474,261,4.474,262,4.969,263,4.474,264,4.474,265,2.802,266,3.732,267,3.732,268,2.802,269,2.802,270,2.802,271,2.802]],["title/components/MoviesComponent.html",[0,0.028,25,0.618]],["body/components/MoviesComponent.html",[0,0.043,1,0.327,2,0.816,3,0.327,4,0.276,5,0.443,6,0.443,7,0.443,8,0.276,10,0.522,11,1.092,12,0.945,13,1.092,14,1.092,15,0.885,16,1.092,17,1.092,18,0.945,19,1.888,20,1.362,21,0.443,23,0.819,24,1.365,25,0.746,26,0.327,27,0.709,29,1.269,31,0.327,32,0.522,33,2.79,34,0.945,35,1.812,36,0.885,37,0.931,38,1.458,40,0.709,41,0.058,42,0.746,43,0.949,44,0.709,50,1.092,51,1.517,52,1.717,53,1.559,55,0.819,56,1.349,60,0.914,61,0.276,62,0.512,65,0.931,66,0.327,67,0.522,68,1.107,71,0.443,72,0.709,73,0.709,74,0.443,75,1.012,76,0.443,77,0.443,78,0.327,79,0.443,80,0.443,81,0.327,82,1.288,83,0.443,84,0.327,85,0.443,86,0.327,87,0.443,88,0.443,89,0.443,90,0.327,91,0.443,92,0.382,93,0.443,94,0.023,95,0.023,98,1.092,99,0.945,101,1.586,103,1.982,105,2.491,108,1.855,109,1.862,112,0.683,113,0.591,114,0.683,115,1.117,116,2.551,117,1.49,121,0.683,122,1.092,123,1.862,124,2.606,135,1.786,136,1.49,148,2.864,163,1.269,169,1.855,171,2.61,173,1.49,180,1.49,203,1.092,205,1.349,207,0.931,217,1.812,220,1.586,239,2.219,272,1.117,273,1.816,274,2.233,275,2.233,276,2.236,277,2.236,278,2.79,279,2.795,280,2.551,281,1.786,282,2.551,283,3.194,284,2.551,285,3.194,286,2.551,287,2.551,288,3.246,289,1.398,290,1.812,291,1.982,292,2.233,293,1.862,294,1.786,295,1.786,296,1.786,297,1.49,298,1.269,299,1.49,300,2.551,301,1.786,302,2.233,303,1.398,304,2.551,305,1.49,306,1.49,307,1.49,308,1.49,309,2.551,310,1.786,311,1.786,312,1.786,313,1.398,314,1.117,315,1.398,316,1.398,317,3.194,318,3.726,319,2.236,320,3.194,321,2.236,322,1.398,323,2.236,324,2.236,325,1.398,326,1.398,327,1.786,328,2.236,329,1.398,330,1.398,331,3.493,332,3.125,333,1.398,334,1.398,335,2.976,336,2.236,337,1.398,338,3.194,339,1.398,340,0.931,341,1.117,342,0.931,343,2.128,344,1.398,345,1.117,346,2.233,347,1.398,348,0.931,349,1.398,350,1.398,351,2.236,352,4.064,353,1.398,354,1.398,355,1.398,356,2.236,357,2.233,358,1.398,359,1.117,360,1.117,361,1.398,362,0.931,363,1.398,364,1.117,365,2.233,366,1.117,367,1.117,368,1.398,369,1.398,370,1.398,371,1.398,372,1.398,373,1.398,374,1.398,375,1.117,376,1.49,377,1.49,378,1.786,379,1.49,380,1.49,381,2.236,382,2.236,383,2.236,384,2.236,385,2.551,386,2.128,387,1.786,388,1.786]],["title/components/NavigateComponent.html",[0,0.028,26,0.618]],["body/components/NavigateComponent.html",[0,0.05,1,0.721,2,0.929,3,0.721,4,0.61,5,0.978,6,0.978,7,0.978,8,0.61,10,0.721,11,1.941,12,1.68,13,1.941,14,1.941,15,1.393,16,1.941,17,1.941,20,1.637,21,0.978,23,1.456,24,2.148,25,0.721,26,1.085,27,1.26,41,0.057,42,0.929,51,1.26,60,1.085,61,0.61,62,1.13,66,0.721,67,0.721,71,0.978,72,1.26,73,1.26,74,0.978,75,1.472,76,0.978,77,0.978,78,1.085,79,0.978,80,0.978,81,1.085,82,1.393,83,0.978,84,0.721,85,0.978,86,0.721,87,0.978,88,0.978,89,0.978,90,0.721,91,0.978,92,0.843,93,0.978,94,0.042,95,0.042,98,1.941,99,1.68,136,2.649,151,1.941,169,1.68,274,3.513,389,2.465,390,3.976,391,3.086,392,3.086,393,3.976]],["title/components/TestWSComponent.html",[0,0.028,90,0.618]],["body/components/TestWSComponent.html",[0,0.042,1,0.375,2,0.805,3,0.375,4,0.317,5,0.508,6,0.508,7,0.508,8,0.317,10,0.582,11,1.217,12,1.053,13,1.217,14,1.217,15,0.968,16,1.217,17,1.217,18,1.053,20,1.418,21,0.508,25,0.375,26,0.375,27,0.79,31,0.375,32,0.714,34,1.669,35,1.955,36,0.968,38,1.418,40,0.508,41,0.058,42,0.714,43,0.805,44,0.508,50,1.683,51,1.418,52,1.669,53,1.929,54,1.414,55,1.119,56,1.291,58,2.297,60,0.582,61,0.317,66,0.375,67,0.375,68,0.508,69,0.91,71,0.508,72,0.79,73,0.79,74,0.508,75,1.092,76,0.508,77,0.508,78,0.375,79,0.508,80,0.508,81,0.375,82,0.79,83,0.508,84,0.375,85,0.508,86,0.375,87,0.508,88,0.508,89,0.508,90,0.805,91,0.968,92,0.438,93,0.508,94,0.036,95,0.026,98,1.217,99,1.053,108,1.456,121,0.783,131,3.156,169,1.669,187,1.661,189,2.982,196,1.661,198,1.991,203,1.929,205,1.053,206,1.991,208,1.069,217,1.734,239,2.539,273,1.85,290,1.955,291,1.955,293,2.748,299,2.297,305,2.982,306,2.982,307,1.069,308,1.661,327,1.991,340,1.069,343,3.193,348,1.661,376,1.661,386,1.661,394,1.281,395,2.493,396,3.057,397,3.057,398,3.733,399,3.447,400,3.447,401,3.447,402,3.447,403,3.447,404,1.604,405,2.493,406,3.951,407,2.753,408,1.604,409,2.493,410,1.604,411,3.405,412,4.263,413,4.475,414,4.475,415,2.753,416,1.604,417,2.493,418,1.604,419,3.497,420,1.604,421,3.447,422,1.604,423,2.493,424,1.604,425,2.493,426,3.447,427,2.493,428,1.604,429,2.493,430,2.493,431,2.493,432,1.604,433,3.057,434,1.069,435,2.493,436,2.493,437,3.733,438,3.733,439,1.604,440,1.604,441,1.604,442,1.604,443,1.604,444,2.493,445,1.661,446,1.604,447,1.604,448,3.733,449,3.447,450,3.057,451,1.604,452,1.604,453,1.281,454,2.493,455,1.604,456,1.604,457,2.493,458,1.604,459,1.604,460,1.604,461,1.604,462,1.604,463,3.951,464,2.493]],["title/coverage.html",[465,2.869]],["body/coverage.html",[0,0.055,1,0.825,8,0.699,9,2.822,19,1.493,25,0.825,26,0.825,41,0.056,43,0.825,78,0.825,81,0.825,84,0.825,86,0.825,90,0.825,94,0.045,95,0.045,96,2.822,120,2.822,145,2.113,147,2.822,205,1.493,246,2.822,272,2.822,273,1.493,335,2.822,389,2.822,394,2.822,465,2.822,466,3.533,467,2.822,468,3.533,469,5.158,470,3.533,471,2.822,472,2.822,473,4.68,474,3.533,475,3.533,476,3.533,477,3.533,478,2.822,479,3.533,480,3.533,481,3.533,482,3.533,483,3.533,484,2.822,485,3.533,486,3.533,487,3.533,488,3.533]],["title/dependencies.html",[130,2.118,489,1.774]],["body/dependencies.html",[41,0.057,61,0.739,62,1.369,94,0.047,95,0.047,112,1.825,113,1.579,114,1.825,130,2.491,211,2.491,297,2.491,342,2.491,490,3.738,491,4.202,492,3.738,493,4.479,494,3.578,495,3.738,496,3.738,497,3.738,498,3.738,499,3.738,500,3.738,501,3.738,502,3.738,503,3.738,504,3.738,505,3.738,506,3.738]],["title/index.html",[31,0.519,507,2.221,508,2.221]],["body/index.html",[0,0.046,2,0.725,4,0.614,41,0.042,48,2.939,55,1.461,57,2.479,59,2.264,92,0.847,94,0.042,95,0.042,113,1.967,151,1.516,171,1.761,175,2.068,205,1.311,291,2.264,362,2.068,407,3.523,411,3.188,419,2.479,491,2.479,494,2.479,509,4.41,510,3.104,511,4.816,512,2.479,513,3.99,514,4.41,515,3.104,516,3.104,517,4.816,518,4.929,519,4.929,520,3.104,521,3.99,522,3.104,523,2.479,524,3.104,525,3.104,526,3.104,527,3.104,528,3.104,529,3.104,530,3.99,531,3.99,532,3.104,533,3.104,534,3.104,535,3.104,536,3.104,537,3.104,538,3.104,539,3.104,540,3.104,541,3.104,542,4.41,543,3.104,544,3.104,545,3.104,546,3.104,547,3.104,548,3.104,549,3.104,550,3.104,551,3.104,552,3.99,553,3.104,554,3.104,555,3.104,556,3.104,557,4.41,558,3.104,559,4.929,560,3.104,561,3.104,562,3.104,563,3.104,564,3.104,565,3.104,566,3.104,567,3.104,568,3.104,569,3.104,570,3.104,571,3.104,572,3.104,573,3.104,574,3.104,575,3.104,576,2.068,577,3.104]],["title/modules.html",[578,2.869]],["body/modules.html",[41,0.05,94,0.05,95,0.05,578,3.369]],["title/components/movieComponent.html",[0,0.028,86,0.618]],["body/components/movieComponent.html",[0,0.039,1,0.287,2,0.866,3,0.287,4,0.243,5,0.389,6,0.389,7,0.389,8,0.243,10,0.763,15,0.389,18,0.851,19,1.821,20,1.306,21,0.389,23,0.737,24,1.25,25,0.287,26,0.287,27,0.638,29,1.143,31,0.287,32,0.47,34,0.851,35,1.68,36,0.638,37,0.819,38,1.449,40,0.811,41,0.058,42,0.763,43,0.987,44,0.811,50,1.714,51,1.557,52,1.742,53,1.714,54,1.143,58,1.342,59,1.452,60,0.904,61,0.243,62,0.45,65,0.819,66,0.287,67,0.287,68,1.112,71,0.389,72,0.638,73,0.638,74,0.389,75,0.938,76,0.389,77,0.389,78,0.287,79,0.389,80,0.389,81,0.287,82,1.366,83,0.389,84,0.287,85,0.389,86,0.692,87,0.389,88,0.389,89,0.389,90,0.287,91,0.389,92,0.335,93,0.389,94,0.021,95,0.021,101,1.452,103,1.992,105,2.396,108,1.566,109,1.342,112,0.6,113,0.519,114,0.6,117,1.342,121,0.983,122,0.983,123,1.705,124,2.47,144,1.609,148,3.161,149,1.342,163,1.143,169,1.635,175,1.342,180,1.973,203,2.333,208,2.177,217,1.68,220,1.452,236,2.61,239,2.195,247,0.981,273,1.742,275,2.045,278,2.61,280,2.365,281,1.609,282,2.365,284,2.365,286,2.61,287,2.365,288,3.091,290,1.143,291,1.854,292,2.045,293,1.705,294,2.365,295,1.609,296,1.609,297,1.342,298,1.143,299,1.342,300,1.609,301,1.609,302,2.045,304,3.091,305,1.973,306,2.339,307,2.47,308,2.47,309,2.804,310,2.804,311,3.091,312,1.609,314,1.609,332,1.609,340,0.819,341,0.981,342,1.342,343,1.973,345,0.981,346,1.609,348,1.342,357,0.981,359,0.981,360,1.609,362,1.705,364,0.981,365,2.804,366,1.609,367,1.609,375,0.981,376,1.973,377,1.973,378,1.609,379,1.342,380,1.342,385,1.609,386,1.342,387,2.804,388,1.609,434,1.342,445,1.342,453,3.374,478,0.981,523,0.981,579,2.014,580,2.014,581,2.56,582,3.268,583,2.56,584,2.365,585,2.365,586,1.609,587,2.014,588,2.014,589,2.014,590,1.228,591,1.228,592,1.228,593,1.228,594,1.228,595,2.014,596,2.014,597,2.961,598,2.961,599,1.228,600,2.014,601,2.014,602,1.228,603,2.961,604,2.961,605,2.014,606,1.228,607,2.014,608,1.228,609,1.228,610,1.228,611,1.228,612,2.014,613,2.014,614,2.014,615,1.228,616,1.228,617,1.228,618,2.014,619,2.014,620,1.228,621,2.014,622,2.014,623,1.228,624,3.268,625,1.228,626,1.228,627,1.228,628,2.014,629,2.56,630,2.014,631,2.014,632,2.014,633,2.014,634,3.51,635,1.228,636,2.014,637,1.228,638,1.228,639,1.228,640,1.228,641,1.228,642,2.961,643,1.228,644,1.228,645,1.228,646,1.228,647,1.228,648,1.228,649,1.228,650,1.228,651,1.228,652,1.228,653,1.228,654,1.228,655,1.228,656,1.228,657,2.014,658,1.609,659,1.609,660,2.014,661,1.609,662,2.014,663,2.014,664,2.014,665,2.014,666,2.014,667,2.014,668,2.014]],["title/overview.html",[576,2.393]],["body/overview.html",[2,0.975,41,0.05,94,0.05,95,0.05,146,2.781,445,2.781,576,2.781,669,4.174]],["title/properties.html",[32,0.742,489,1.774]],["body/properties.html",[32,0.978,41,0.053,94,0.05,95,0.05,512,3.343,670,4.185]],["title/miscellaneous/variables.html",[671,1.774,672,2.539]],["body/miscellaneous/variables.html",[18,1.955,31,0.922,41,0.056,43,0.922,55,1.446,56,1.668,94,0.049,95,0.049,99,1.668,471,3.154,472,3.696,671,3.154,672,3.154,673,3.949,674,3.949,675,3.949,676,3.949,677,3.949,678,3.949,679,3.949,680,3.949,681,3.949]],["title/injectables/webService.html",[145,1.293,273,1.118]],["body/injectables/webService.html",[3,0.449,4,0.381,8,0.381,10,0.991,31,0.449,32,0.669,34,1.209,36,1.083,38,1.461,40,1.43,41,0.057,42,1.054,43,1.077,44,1.43,45,1.624,50,2.251,51,1.634,52,2.012,55,1.251,56,0.813,60,0.798,61,0.381,66,0.449,67,0.798,68,1.344,69,1.092,94,0.03,95,0.03,108,1.599,132,1.907,145,1.398,146,1.282,149,1.907,150,2.287,151,2.203,152,3.605,153,2.73,156,2.73,157,2.287,159,2.287,160,1.537,161,3.388,163,1.939,169,1.599,171,2.616,173,2.926,181,3.683,185,1.537,187,2.826,188,2.287,189,3.347,191,3.388,192,3.024,193,2.287,196,3.007,202,2.287,203,2.354,205,1.599,207,1.907,209,2.287,210,2.287,211,1.282,214,1.537,218,1.537,220,2.492,230,2.73,273,1.599,290,2.147,377,1.282,379,1.282,380,1.282,415,2.287,434,1.907,467,2.287,484,1.537,584,2.73,585,2.73,586,2.73,658,1.537,659,1.537,661,1.537,682,2.863,683,3.418,684,2.863,685,1.924,686,1.924,687,1.924,688,1.924,689,1.924,690,1.924,691,1.924,692,3.785,693,1.924,694,1.924,695,1.924,696,1.924,697,2.863,698,2.863,699,2.863,700,2.863,701,2.863,702,2.863,703,1.924,704,1.924,705,4.241,706,1.924,707,3.785,708,2.863,709,1.924,710,1.924,711,1.924,712,2.863,713,1.924,714,1.924,715,1.924,716,2.863,717,1.924]],["title/routes.html",[298,2.038]],["body/routes.html",[41,0.05,94,0.05,95,0.05,298,2.393]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"components/movieComponent.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"injectables/webService.html":{},"routes.html":{}}}],["0.0.0",{"_index":670,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":217,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["1.1.26",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":243,"title":{},"body":{"injectables/Dataservice.html":{}}}],["100",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["13/17",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["19.0.0",{"_index":491,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":445,"title":{},"body":{"components/TestWSComponent.html":{},"components/movieComponent.html":{},"overview.html":{}}}],["2.2.3",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["255",{"_index":262,"title":{},"body":{"components/HomepageComponent.html":{}}}],["3",{"_index":665,"title":{},"body":{"components/movieComponent.html":{}}}],["3.7.1",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":434,"title":{},"body":{"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["4/4",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":208,"title":{},"body":{"injectables/Dataservice.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["5.3.3",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":254,"title":{},"body":{"components/HomepageComponent.html":{}}}],["50%);}.centered2",{"_index":269,"title":{},"body":{"components/HomepageComponent.html":{}}}],["50%);}movie",{"_index":270,"title":{},"body":{"components/HomepageComponent.html":{}}}],["60",{"_index":266,"title":{},"body":{"components/HomepageComponent.html":{}}}],["7.8.0",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":669,"title":{},"body":{"overview.html":{}}}],["8/9",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["absolute",{"_index":252,"title":{},"body":{"components/HomepageComponent.html":{}}}],["access",{"_index":132,"title":{},"body":{"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["activatedroute",{"_index":287,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["actual_component",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["add",{"_index":697,"title":{},"body":{"injectables/webService.html":{}}}],["added",{"_index":207,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"injectables/webService.html":{}}}],["adding",{"_index":338,"title":{},"body":{"components/MoviesComponent.html":{}}}],["additional",{"_index":568,"title":{},"body":{"index.html":{}}}],["addmovie",{"_index":682,"title":{},"body":{"injectables/webService.html":{}}}],["addmovie(movie",{"_index":685,"title":{},"body":{"injectables/webService.html":{}}}],["addmovie(movie:any",{"_index":706,"title":{},"body":{"injectables/webService.html":{}}}],["adjust",{"_index":639,"title":{},"body":{"components/movieComponent.html":{}}}],["alert('there",{"_index":367,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["align",{"_index":256,"title":{},"body":{"components/HomepageComponent.html":{}}}],["allowing",{"_index":618,"title":{},"body":{"components/movieComponent.html":{}}}],["angular",{"_index":113,"title":{},"body":{"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"dependencies.html":{},"index.html":{},"components/movieComponent.html":{}}}],["angular/animations",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":114,"title":{},"body":{"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"dependencies.html":{},"components/movieComponent.html":{}}}],["angular/common/http",{"_index":214,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["angular/compiler",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"dependencies.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["angular/forms",{"_index":342,"title":{},"body":{"components/MoviesComponent.html":{},"dependencies.html":{},"components/movieComponent.html":{}}}],["angular/platform",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"dependencies.html":{},"components/movieComponent.html":{}}}],["api",{"_index":152,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["api_key",{"_index":228,"title":{},"body":{"injectables/Dataservice.html":{}}}],["app",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["app.component.css",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{}}}],["appconfig",{"_index":472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorisationComponent.html":{},"index.html":{},"components/movieComponent.html":{}}}],["applicationconfig",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(response",{"_index":451,"title":{},"body":{"components/TestWSComponent.html":{}}}],["artifacts",{"_index":546,"title":{},"body":{"index.html":{}}}],["assets/moviecollection.json",{"_index":213,"title":{},"body":{"injectables/Dataservice.html":{}}}],["assigned",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["assigns",{"_index":347,"title":{},"body":{"components/MoviesComponent.html":{}}}],["asyncpipe",{"_index":100,"title":{},"body":{"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{}}}],["auth",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["auth0/auth0",{"_index":112,"title":{},"body":{"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"dependencies.html":{},"components/movieComponent.html":{}}}],["authenticated",{"_index":110,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["authentication",{"_index":123,"title":{},"body":{"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["authorisation",{"_index":107,"title":{},"body":{"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{}}}],["authorisation.component",{"_index":391,"title":{},"body":{"components/NavigateComponent.html":{}}}],["authorisation.component.html",{"_index":126,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["authorisationcomponent",{"_index":78,"title":{"components/AuthorisationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{}}}],["authservice",{"_index":105,"title":{},"body":{"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["authuser.component",{"_index":392,"title":{},"body":{"components/NavigateComponent.html":{}}}],["authuser.component.html",{"_index":102,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["authusercomponent",{"_index":81,"title":{"components/AuthUserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{}}}],["automatically",{"_index":525,"title":{},"body":{"index.html":{}}}],["available",{"_index":537,"title":{},"body":{"index.html":{}}}],["back",{"_index":638,"title":{},"body":{"components/movieComponent.html":{}}}],["based",{"_index":640,"title":{},"body":{"components/movieComponent.html":{}}}],["below",{"_index":386,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["best",{"_index":664,"title":{},"body":{"components/movieComponent.html":{}}}],["between",{"_index":328,"title":{},"body":{"components/MoviesComponent.html":{}}}],["bootstrap",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["brief",{"_index":657,"title":{},"body":{"components/movieComponent.html":{}}}],["browser",{"_index":494,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":542,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":543,"title":{},"body":{"index.html":{}}}],["button",{"_index":125,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["button'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["calculate",{"_index":167,"title":{},"body":{"injectables/Dataservice.html":{}}}],["call",{"_index":199,"title":{},"body":{"injectables/Dataservice.html":{}}}],["calling",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":257,"title":{},"body":{"components/HomepageComponent.html":{}}}],["centered",{"_index":250,"title":{},"body":{"components/HomepageComponent.html":{}}}],["centered2",{"_index":265,"title":{},"body":{"components/HomepageComponent.html":{}}}],["check",{"_index":305,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["checking",{"_index":595,"title":{},"body":{"components/movieComponent.html":{}}}],["checks",{"_index":109,"title":{},"body":{"components/AuthUserComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["choose",{"_index":564,"title":{},"body":{"index.html":{}}}],["class",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["cli",{"_index":511,"title":{},"body":{"index.html":{}}}],["code",{"_index":530,"title":{},"body":{"index.html":{}}}],["collection",{"_index":196,"title":{},"body":{"injectables/Dataservice.html":{},"components/TestWSComponent.html":{},"injectables/webService.html":{}}}],["color",{"_index":260,"title":{},"body":{"components/HomepageComponent.html":{}}}],["come",{"_index":562,"title":{},"body":{"index.html":{}}}],["command",{"_index":557,"title":{},"body":{"index.html":{}}}],["comment",{"_index":308,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["commonmodule",{"_index":101,"title":{},"body":{"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["compile",{"_index":544,"title":{},"body":{"index.html":{}}}],["complete",{"_index":536,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"index.html":{},"components/movieComponent.html":{}}}],["component_template",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"index.html":{},"components/movieComponent.html":{},"overview.html":{}}}],["config",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{}}}],["confirm('are",{"_index":631,"title":{},"body":{"components/movieComponent.html":{}}}],["console.error('error",{"_index":366,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["console.log('movie",{"_index":359,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["console.log('review",{"_index":646,"title":{},"body":{"components/movieComponent.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["constructor(@inject(document",{"_index":142,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["constructor(auth",{"_index":104,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["constructor(dataservice",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["constructor(document",{"_index":128,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["constructor(http",{"_index":160,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["constructor(private",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{},"components/TestWSComponent.html":{},"injectables/webService.html":{}}}],["constructor(public",{"_index":115,"title":{},"body":{"components/AuthUserComponent.html":{},"components/MoviesComponent.html":{}}}],["constructor(webservice",{"_index":404,"title":{},"body":{"components/TestWSComponent.html":{}}}],["constructors",{"_index":588,"title":{},"body":{"components/movieComponent.html":{}}}],["containing",{"_index":701,"title":{},"body":{"injectables/webService.html":{}}}],["control",{"_index":314,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["controls",{"_index":605,"title":{},"body":{"components/movieComponent.html":{}}}],["coverage",{"_index":465,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":300,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["created",{"_index":166,"title":{},"body":{"injectables/Dataservice.html":{}}}],["critical",{"_index":601,"title":{},"body":{"components/movieComponent.html":{}}}],["current",{"_index":116,"title":{},"body":{"components/AuthUserComponent.html":{},"components/MoviesComponent.html":{}}}],["data",{"_index":148,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["data.service",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["dataservice",{"_index":19,"title":{"injectables/Dataservice.html":{}},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"coverage.html":{},"components/movieComponent.html":{}}}],["datatoreturn",{"_index":223,"title":{},"body":{"injectables/Dataservice.html":{}}}],["datatoreturn.push(movie",{"_index":227,"title":{},"body":{"injectables/Dataservice.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{}}}],["default",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"injectables/webService.html":{}}}],["defined",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["defining",{"_index":121,"title":{},"body":{"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["delete",{"_index":634,"title":{},"body":{"components/movieComponent.html":{}}}],["deleted",{"_index":636,"title":{},"body":{"components/movieComponent.html":{}}}],["deletemovie",{"_index":585,"title":{},"body":{"components/movieComponent.html":{},"injectables/webService.html":{}}}],["deletemovie(id",{"_index":687,"title":{},"body":{"injectables/webService.html":{}}}],["deletereview",{"_index":586,"title":{},"body":{"components/movieComponent.html":{},"injectables/webService.html":{}}}],["deletereview(id",{"_index":689,"title":{},"body":{"injectables/webService.html":{}}}],["deletereview(reviewid",{"_index":591,"title":{},"body":{"components/movieComponent.html":{}}}],["deletereview(reviewid:string",{"_index":643,"title":{},"body":{"components/movieComponent.html":{}}}],["deleting",{"_index":642,"title":{},"body":{"components/movieComponent.html":{}}}],["deletion",{"_index":637,"title":{},"body":{"components/movieComponent.html":{}}}],["dependencies",{"_index":130,"title":{"dependencies.html":{}},"body":{"components/AuthorisationComponent.html":{},"dependencies.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["detailed",{"_index":573,"title":{},"body":{"index.html":{}}}],["details",{"_index":117,"title":{},"body":{"components/AuthUserComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["determine",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{}}}],["development",{"_index":513,"title":{},"body":{"index.html":{}}}],["different",{"_index":421,"title":{},"body":{"components/TestWSComponent.html":{}}}],["directed",{"_index":378,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["directive",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["directives",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"index.html":{},"components/movieComponent.html":{}}}],["director",{"_index":331,"title":{},"body":{"components/MoviesComponent.html":{}}}],["directory",{"_index":151,"title":{},"body":{"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/NavigateComponent.html":{},"index.html":{},"injectables/webService.html":{}}}],["directorywelcome",{"_index":271,"title":{},"body":{"components/HomepageComponent.html":{}}}],["displayed",{"_index":613,"title":{},"body":{"components/movieComponent.html":{}}}],["displaying",{"_index":409,"title":{},"body":{"components/TestWSComponent.html":{}}}],["dist",{"_index":547,"title":{},"body":{"index.html":{}}}],["document",{"_index":127,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["documentation",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["dummy",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{}}}],["dummyreview",{"_index":237,"title":{},"body":{"injectables/Dataservice.html":{}}}],["dynamic",{"_index":297,"title":{},"body":{"components/MoviesComponent.html":{},"dependencies.html":{},"components/movieComponent.html":{}}}],["e2e",{"_index":560,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":561,"title":{},"body":{"index.html":{}}}],["each",{"_index":200,"title":{},"body":{"injectables/Dataservice.html":{}}}],["element",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["end",{"_index":559,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":150,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["entry",{"_index":384,"title":{},"body":{"components/MoviesComponent.html":{}}}],["error",{"_index":365,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["eventcoalescing",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":518,"title":{},"body":{"index.html":{}}}],["execute",{"_index":553,"title":{},"body":{"index.html":{}}}],["export",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["external",{"_index":176,"title":{},"body":{"injectables/Dataservice.html":{}}}],["fail",{"_index":438,"title":{},"body":{"components/TestWSComponent.html":{}}}],["fails",{"_index":414,"title":{},"body":{"components/TestWSComponent.html":{}}}],["fetch",{"_index":187,"title":{},"body":{"injectables/Dataservice.html":{},"components/TestWSComponent.html":{},"injectables/webService.html":{}}}],["fetched",{"_index":436,"title":{},"body":{"components/TestWSComponent.html":{}}}],["fetches",{"_index":195,"title":{},"body":{"injectables/Dataservice.html":{}}}],["field",{"_index":598,"title":{},"body":{"components/movieComponent.html":{}}}],["fields",{"_index":668,"title":{},"body":{"components/movieComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["files",{"_index":529,"title":{},"body":{"index.html":{}}}],["fill",{"_index":667,"title":{},"body":{"components/movieComponent.html":{}}}],["find",{"_index":406,"title":{},"body":{"components/TestWSComponent.html":{}}}],["first",{"_index":425,"title":{},"body":{"components/TestWSComponent.html":{}}}],["first_movie_list",{"_index":396,"title":{},"body":{"components/TestWSComponent.html":{}}}],["following",{"_index":556,"title":{},"body":{"index.html":{}}}],["font",{"_index":258,"title":{},"body":{"components/HomepageComponent.html":{}}}],["for(report",{"_index":464,"title":{},"body":{"components/TestWSComponent.html":{}}}],["for(var",{"_index":244,"title":{},"body":{"injectables/Dataservice.html":{}}}],["form",{"_index":180,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["formbuilder",{"_index":288,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["formdata",{"_index":708,"title":{},"body":{"injectables/webService.html":{}}}],["forms",{"_index":301,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["formula",{"_index":165,"title":{},"body":{"injectables/Dataservice.html":{}}}],["framework",{"_index":563,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":412,"title":{},"body":{"components/TestWSComponent.html":{}}}],["function",{"_index":198,"title":{},"body":{"injectables/Dataservice.html":{},"components/TestWSComponent.html":{}}}],["function(movie",{"_index":225,"title":{},"body":{"injectables/Dataservice.html":{}}}],["functionality",{"_index":430,"title":{},"body":{"components/TestWSComponent.html":{}}}],["generalised",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{},"index.html":{}}}],["generated",{"_index":510,"title":{},"body":{"index.html":{}}}],["genre",{"_index":332,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["getlastpagenumber",{"_index":154,"title":{},"body":{"injectables/Dataservice.html":{}}}],["getloremipsum",{"_index":155,"title":{},"body":{"injectables/Dataservice.html":{}}}],["getloremipsum(paragraphs",{"_index":172,"title":{},"body":{"injectables/Dataservice.html":{}}}],["getmovie",{"_index":156,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["getmovie(id",{"_index":185,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["getmovies",{"_index":157,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["getmovies(page",{"_index":193,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["getreviews",{"_index":683,"title":{},"body":{"injectables/webService.html":{}}}],["getreviews(id",{"_index":694,"title":{},"body":{"injectables/webService.html":{}}}],["getting",{"_index":507,"title":{"index.html":{}},"body":{}}],["handle",{"_index":294,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["handling",{"_index":134,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["headers",{"_index":233,"title":{},"body":{"injectables/Dataservice.html":{}}}],["helpbuilding",{"_index":541,"title":{},"body":{"index.html":{}}}],["holds",{"_index":612,"title":{},"body":{"components/movieComponent.html":{}}}],["home",{"_index":393,"title":{},"body":{"components/NavigateComponent.html":{}}}],["homepage",{"_index":247,"title":{},"body":{"components/HomepageComponent.html":{},"components/movieComponent.html":{}}}],["homepage'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["homepage.component.css",{"_index":249,"title":{},"body":{"components/HomepageComponent.html":{}}}],["homepage.component.html",{"_index":248,"title":{},"body":{"components/HomepageComponent.html":{}}}],["homepagecomponent",{"_index":84,"title":{"components/HomepageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{}}}],["html",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["http",{"_index":163,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["http://127.0.0.1:5000/api/v1.0/movies",{"_index":705,"title":{},"body":{"injectables/webService.html":{}}}],["http://127.0.0.1:5000/api/v1.0/movies?pn",{"_index":703,"title":{},"body":{"injectables/webService.html":{}}}],["http://localhost:4200",{"_index":524,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":161,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["https://api.api",{"_index":231,"title":{},"body":{"injectables/Dataservice.html":{}}}],["i=0",{"_index":245,"title":{},"body":{"injectables/Dataservice.html":{}}}],["id",{"_index":189,"title":{},"body":{"injectables/Dataservice.html":{},"components/TestWSComponent.html":{},"injectables/webService.html":{}}}],["id's",{"_index":417,"title":{},"body":{"components/TestWSComponent.html":{}}}],["identifier",{"_index":467,"title":{},"body":{"coverage.html":{},"injectables/webService.html":{}}}],["identifing",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identify",{"_index":426,"title":{},"body":{"components/TestWSComponent.html":{}}}],["identiier",{"_index":692,"title":{},"body":{"injectables/webService.html":{}}}],["if(array.isarray(response",{"_index":432,"title":{},"body":{"components/TestWSComponent.html":{}}}],["implementing",{"_index":317,"title":{},"body":{"components/MoviesComponent.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["imported",{"_index":589,"title":{},"body":{"components/movieComponent.html":{}}}],["imports",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/movieComponent.html":{}}}],["includes",{"_index":532,"title":{},"body":{"index.html":{}}}],["including",{"_index":572,"title":{},"body":{"index.html":{}}}],["indentifies",{"_index":190,"title":{},"body":{"injectables/Dataservice.html":{}}}],["index",{"_index":31,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"miscellaneous/variables.html":{},"injectables/webService.html":{}}}],["individual",{"_index":201,"title":{},"body":{"injectables/Dataservice.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["information",{"_index":571,"title":{},"body":{"index.html":{}}}],["inject",{"_index":141,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["inject(document",{"_index":139,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["injectable",{"_index":145,"title":{"injectables/Dataservice.html":{},"injectables/webService.html":{}},"body":{"injectables/Dataservice.html":{},"coverage.html":{},"injectables/webService.html":{}}}],["injectables",{"_index":146,"title":{},"body":{"injectables/Dataservice.html":{},"overview.html":{},"injectables/webService.html":{}}}],["injecting",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["insert",{"_index":385,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["interacted",{"_index":600,"title":{},"body":{"components/movieComponent.html":{}}}],["interaction",{"_index":596,"title":{},"body":{"components/movieComponent.html":{}}}],["invalid",{"_index":309,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["ipsum",{"_index":184,"title":{},"body":{"injectables/Dataservice.html":{}}}],["isincomplete",{"_index":280,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["isinvalid",{"_index":281,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["isinvalid(control",{"_index":312,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["isuntouched",{"_index":282,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["jquery",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["jsondata",{"_index":212,"title":{},"body":{"injectables/Dataservice.html":{}}}],["jsondata.foreach",{"_index":224,"title":{},"body":{"injectables/Dataservice.html":{}}}],["jsondata.slice(pagestart",{"_index":221,"title":{},"body":{"injectables/Dataservice.html":{}}}],["karma",{"_index":554,"title":{},"body":{"index.html":{}}}],["key",{"_index":235,"title":{},"body":{"injectables/Dataservice.html":{}}}],["left",{"_index":255,"title":{},"body":{"components/HomepageComponent.html":{}}}],["legend",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["less",{"_index":319,"title":{},"body":{"components/MoviesComponent.html":{}}}],["link",{"_index":702,"title":{},"body":{"injectables/webService.html":{}}}],["linked",{"_index":206,"title":{},"body":{"injectables/Dataservice.html":{},"components/TestWSComponent.html":{}}}],["list",{"_index":362,"title":{},"body":{"components/MoviesComponent.html":{},"index.html":{},"components/movieComponent.html":{}}}],["load",{"_index":324,"title":{},"body":{"components/MoviesComponent.html":{}}}],["local",{"_index":516,"title":{},"body":{"index.html":{}}}],["log",{"_index":143,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["login",{"_index":388,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["lorem",{"_index":183,"title":{},"body":{"injectables/Dataservice.html":{}}}],["loremipsum",{"_index":236,"title":{},"body":{"injectables/Dataservice.html":{},"components/movieComponent.html":{}}}],["manages",{"_index":302,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["managing",{"_index":135,"title":{},"body":{"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{}}}],["matching",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"components/movieComponent.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"injectables/webService.html":{},"routes.html":{}}}],["math.ceil(jsondata.length",{"_index":222,"title":{},"body":{"injectables/Dataservice.html":{}}}],["math.floor(math.random",{"_index":242,"title":{},"body":{"injectables/Dataservice.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["method",{"_index":304,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["miscellaneous",{"_index":671,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":311,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["modify",{"_index":528,"title":{},"body":{"index.html":{}}}],["modules",{"_index":578,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":570,"title":{},"body":{"index.html":{}}}],["movie",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["movie'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["movie.component.css",{"_index":580,"title":{},"body":{"components/movieComponent.html":{}}}],["movie.component.html",{"_index":579,"title":{},"body":{"components/movieComponent.html":{}}}],["movie.director",{"_index":379,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["movie.genre",{"_index":380,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["movie.title",{"_index":377,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["movie['_id']['$oid",{"_index":226,"title":{},"body":{"injectables/Dataservice.html":{}}}],["movie_list",{"_index":278,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["moviecomponent",{"_index":86,"title":{"components/movieComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{}}}],["moviefe",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["movieform",{"_index":279,"title":{},"body":{"components/MoviesComponent.html":{}}}],["movieid",{"_index":581,"title":{},"body":{"components/movieComponent.html":{}}}],["movies",{"_index":169,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["movies'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["movies.component",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["movies.component.css",{"_index":277,"title":{},"body":{"components/MoviesComponent.html":{}}}],["movies.component.html",{"_index":276,"title":{},"body":{"components/MoviesComponent.html":{}}}],["moviescomponent",{"_index":25,"title":{"components/MoviesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["namefor",{"_index":535,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":523,"title":{},"body":{"index.html":{},"components/movieComponent.html":{}}}],["navigate.component",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate.component.html",{"_index":390,"title":{},"body":{"components/NavigateComponent.html":{}}}],["navigatecomponent",{"_index":26,"title":{"components/NavigateComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{}}}],["navigation",{"_index":136,"title":{},"body":{"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{}}}],["navigation'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["needs",{"_index":567,"title":{},"body":{"index.html":{}}}],["new",{"_index":205,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"index.html":{},"injectables/webService.html":{}}}],["next",{"_index":320,"title":{},"body":{"components/MoviesComponent.html":{}}}],["nextpage",{"_index":283,"title":{},"body":{"components/MoviesComponent.html":{}}}],["ng",{"_index":519,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["ninjas.com/v1/loremipsum?paragraphs",{"_index":232,"title":{},"body":{"injectables/Dataservice.html":{}}}],["num_reviews",{"_index":454,"title":{},"body":{"components/TestWSComponent.html":{}}}],["number",{"_index":173,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"injectables/webService.html":{}}}],["number(sessionstorage['page",{"_index":353,"title":{},"body":{"components/MoviesComponent.html":{}}}],["numreviews",{"_index":241,"title":{},"body":{"injectables/Dataservice.html":{}}}],["o1llhdrpmx7yixie9hxwwq==mrxycyupuqjyxbj0",{"_index":229,"title":{},"body":{"injectables/Dataservice.html":{}}}],["object",{"_index":192,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["obserable",{"_index":700,"title":{},"body":{"injectables/webService.html":{}}}],["observable",{"_index":181,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["one",{"_index":565,"title":{},"body":{"index.html":{}}}],["onject",{"_index":133,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["onsubmit",{"_index":284,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["open",{"_index":522,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":549,"title":{},"body":{"index.html":{}}}],["optional",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["out",{"_index":144,"title":{},"body":{"components/AuthorisationComponent.html":{},"components/movieComponent.html":{}}}],["outlining",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{}}}],["output",{"_index":429,"title":{},"body":{"components/TestWSComponent.html":{}}}],["overview",{"_index":576,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":489,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":171,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"index.html":{},"injectables/webService.html":{}}}],["pageend",{"_index":219,"title":{},"body":{"injectables/Dataservice.html":{}}}],["pages",{"_index":327,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{}}}],["pagesize",{"_index":153,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["pagestart",{"_index":216,"title":{},"body":{"injectables/Dataservice.html":{}}}],["pagination",{"_index":318,"title":{},"body":{"components/MoviesComponent.html":{}}}],["paragraph",{"_index":182,"title":{},"body":{"injectables/Dataservice.html":{}}}],["paragraphs",{"_index":178,"title":{},"body":{"injectables/Dataservice.html":{}}}],["param",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["parameters",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["pass",{"_index":437,"title":{},"body":{"components/TestWSComponent.html":{}}}],["passes",{"_index":413,"title":{},"body":{"components/TestWSComponent.html":{}}}],["per",{"_index":170,"title":{},"body":{"injectables/Dataservice.html":{}}}],["performance",{"_index":550,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":540,"title":{},"body":{"index.html":{}}}],["please",{"_index":666,"title":{},"body":{"components/movieComponent.html":{}}}],["populatereviews",{"_index":158,"title":{},"body":{"injectables/Dataservice.html":{}}}],["position",{"_index":251,"title":{},"body":{"components/HomepageComponent.html":{}}}],["possible",{"_index":321,"title":{},"body":{"components/MoviesComponent.html":{}}}],["postdata",{"_index":707,"title":{},"body":{"injectables/webService.html":{}}}],["postdata.append(\"comment",{"_index":714,"title":{},"body":{"injectables/webService.html":{}}}],["postdata.append(\"director",{"_index":710,"title":{},"body":{"injectables/webService.html":{}}}],["postdata.append(\"genre",{"_index":711,"title":{},"body":{"injectables/webService.html":{}}}],["postdata.append(\"stars",{"_index":715,"title":{},"body":{"injectables/webService.html":{}}}],["postdata.append(\"title",{"_index":709,"title":{},"body":{"injectables/webService.html":{}}}],["postdata.append(\"username",{"_index":713,"title":{},"body":{"injectables/webService.html":{}}}],["posting",{"_index":423,"title":{},"body":{"components/TestWSComponent.html":{}}}],["postreview",{"_index":159,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["postreview(id",{"_index":202,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["powerful",{"_index":533,"title":{},"body":{"index.html":{}}}],["previous",{"_index":381,"title":{},"body":{"components/MoviesComponent.html":{}}}],["previouspage",{"_index":285,"title":{},"body":{"components/MoviesComponent.html":{}}}],["private",{"_index":343,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["processed",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{}}}],["production",{"_index":548,"title":{},"body":{"index.html":{}}}],["profile",{"_index":97,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["profile'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["project",{"_index":509,"title":{},"body":{"index.html":{}}}],["properties",{"_index":32,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"properties.html":{},"injectables/webService.html":{}}}],["provide",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{}}}],["provided",{"_index":699,"title":{},"body":{"injectables/webService.html":{}}}],["providedin",{"_index":215,"title":{},"body":{"injectables/Dataservice.html":{}}}],["providehttpclient",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":149,"title":{},"body":{"injectables/Dataservice.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["providezonechangedetection",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":131,"title":{},"body":{"components/AuthorisationComponent.html":{},"components/TestWSComponent.html":{}}}],["ps",{"_index":704,"title":{},"body":{"injectables/webService.html":{}}}],["public",{"_index":103,"title":{},"body":{"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["rate",{"_index":662,"title":{},"body":{"components/movieComponent.html":{}}}],["rating",{"_index":660,"title":{},"body":{"components/movieComponent.html":{}}}],["reactiveformsmodule",{"_index":275,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["redirect",{"_index":361,"title":{},"body":{"components/MoviesComponent.html":{}}}],["reference",{"_index":577,"title":{},"body":{"index.html":{}}}],["references",{"_index":574,"title":{},"body":{"index.html":{}}}],["reload",{"_index":526,"title":{},"body":{"index.html":{}}}],["report",{"_index":463,"title":{},"body":{"components/TestWSComponent.html":{}}}],["requested",{"_index":191,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["requests",{"_index":295,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["resources",{"_index":569,"title":{},"body":{"index.html":{}}}],["response",{"_index":239,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["response.length",{"_index":433,"title":{},"body":{"components/TestWSComponent.html":{}}}],["response.text",{"_index":240,"title":{},"body":{"injectables/Dataservice.html":{}}}],["response.text.slice(0,300",{"_index":627,"title":{},"body":{"components/movieComponent.html":{}}}],["response.title",{"_index":447,"title":{},"body":{"components/TestWSComponent.html":{}}}],["results",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"components/movieComponent.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"injectables/webService.html":{},"routes.html":{}}}],["return",{"_index":220,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["returned",{"_index":210,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["returns",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["review",{"_index":203,"title":{},"body":{"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["review.comment",{"_index":659,"title":{},"body":{"components/movieComponent.html":{},"injectables/webService.html":{}}}],["review.stars",{"_index":661,"title":{},"body":{"components/movieComponent.html":{},"injectables/webService.html":{}}}],["review.username",{"_index":658,"title":{},"body":{"components/movieComponent.html":{},"injectables/webService.html":{}}}],["review_list",{"_index":582,"title":{},"body":{"components/movieComponent.html":{}}}],["reviewform",{"_index":583,"title":{},"body":{"components/movieComponent.html":{}}}],["reviewid",{"_index":584,"title":{},"body":{"components/movieComponent.html":{},"injectables/webService.html":{}}}],["reviewid).subscribe",{"_index":645,"title":{},"body":{"components/movieComponent.html":{}}}],["reviewid:any",{"_index":717,"title":{},"body":{"injectables/webService.html":{}}}],["reviews",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["rgb(255",{"_index":261,"title":{},"body":{"components/HomepageComponent.html":{}}}],["root",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{}}}],["root'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["route",{"_index":286,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["router",{"_index":124,"title":{},"body":{"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["routermodule",{"_index":274,"title":{},"body":{"components/MoviesComponent.html":{},"components/NavigateComponent.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/movieComponent.html":{}}}],["routes",{"_index":298,"title":{"routes.html":{}},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{},"routes.html":{}}}],["run",{"_index":517,"title":{},"body":{"index.html":{}}}],["runner",{"_index":555,"title":{},"body":{"index.html":{}}}],["running",{"_index":521,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":211,"title":{},"body":{"injectables/Dataservice.html":{},"dependencies.html":{},"injectables/webService.html":{}}}],["scaffolding",{"_index":531,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":538,"title":{},"body":{"index.html":{}}}],["scream",{"_index":448,"title":{},"body":{"components/TestWSComponent.html":{}}}],["second",{"_index":427,"title":{},"body":{"components/TestWSComponent.html":{}}}],["second_movie_list",{"_index":397,"title":{},"body":{"components/TestWSComponent.html":{}}}],["section",{"_index":597,"title":{},"body":{"components/movieComponent.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["serveonce",{"_index":520,"title":{},"body":{"index.html":{}}}],["server",{"_index":514,"title":{},"body":{"index.html":{}}}],["service",{"_index":108,"title":{},"body":{"components/AuthUserComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["session",{"_index":349,"title":{},"body":{"components/MoviesComponent.html":{}}}],["sessionstorage['page",{"_index":351,"title":{},"body":{"components/MoviesComponent.html":{}}}],["set",{"_index":122,"title":{},"body":{"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["setting",{"_index":603,"title":{},"body":{"components/movieComponent.html":{}}}],["share",{"_index":292,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["showing",{"_index":382,"title":{},"body":{"components/MoviesComponent.html":{}}}],["shows",{"_index":296,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["single",{"_index":188,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["size",{"_index":209,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["size:30px",{"_index":267,"title":{},"body":{"components/HomepageComponent.html":{}}}],["size:80px",{"_index":259,"title":{},"body":{"components/HomepageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"index.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["specific",{"_index":415,"title":{},"body":{"components/TestWSComponent.html":{},"injectables/webService.html":{}}}],["specified",{"_index":698,"title":{},"body":{"injectables/webService.html":{}}}],["speed",{"_index":551,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/authorisation.component.ts",{"_index":120,"title":{},"body":{"components/AuthorisationComponent.html":{},"coverage.html":{}}}],["src/app/authorisation.component.ts:19",{"_index":129,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["src/app/authorisation.component.ts:26",{"_index":140,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["src/app/authorisation.component.ts:27",{"_index":138,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["src/app/authuser.component.ts",{"_index":96,"title":{},"body":{"components/AuthUserComponent.html":{},"coverage.html":{}}}],["src/app/authuser.component.ts:17",{"_index":106,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["src/app/authuser.component.ts:22",{"_index":111,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["src/app/data.service.ts",{"_index":147,"title":{},"body":{"injectables/Dataservice.html":{},"coverage.html":{}}}],["src/app/data.service.ts:103",{"_index":204,"title":{},"body":{"injectables/Dataservice.html":{}}}],["src/app/data.service.ts:17",{"_index":162,"title":{},"body":{"injectables/Dataservice.html":{}}}],["src/app/data.service.ts:30",{"_index":194,"title":{},"body":{"injectables/Dataservice.html":{}}}],["src/app/data.service.ts:40",{"_index":164,"title":{},"body":{"injectables/Dataservice.html":{}}}],["src/app/data.service.ts:49",{"_index":186,"title":{},"body":{"injectables/Dataservice.html":{}}}],["src/app/data.service.ts:64",{"_index":174,"title":{},"body":{"injectables/Dataservice.html":{}}}],["src/app/data.service.ts:75",{"_index":197,"title":{},"body":{"injectables/Dataservice.html":{}}}],["src/app/homepage.component.ts",{"_index":246,"title":{},"body":{"components/HomepageComponent.html":{},"coverage.html":{}}}],["src/app/movie.component.ts",{"_index":478,"title":{},"body":{"coverage.html":{},"components/movieComponent.html":{}}}],["src/app/movie.component.ts:107",{"_index":592,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:125",{"_index":606,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:143",{"_index":594,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:152",{"_index":599,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:161",{"_index":593,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:27",{"_index":611,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:32",{"_index":610,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:37",{"_index":617,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:42",{"_index":616,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:44",{"_index":615,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:46",{"_index":587,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:56",{"_index":609,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:60",{"_index":608,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:67",{"_index":602,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movie.component.ts:91",{"_index":590,"title":{},"body":{"components/movieComponent.html":{}}}],["src/app/movies.component.ts",{"_index":272,"title":{},"body":{"components/MoviesComponent.html":{},"coverage.html":{}}}],["src/app/movies.component.ts:107",{"_index":316,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:115",{"_index":313,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:119",{"_index":315,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:128",{"_index":303,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:28",{"_index":334,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:33",{"_index":339,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:38",{"_index":337,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:40",{"_index":333,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:44",{"_index":289,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:54",{"_index":330,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:59",{"_index":329,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:63",{"_index":322,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:79",{"_index":325,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies.component.ts:96",{"_index":326,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/navigate.component.ts",{"_index":389,"title":{},"body":{"components/NavigateComponent.html":{},"coverage.html":{}}}],["src/app/testws.component.ts",{"_index":394,"title":{},"body":{"components/TestWSComponent.html":{},"coverage.html":{}}}],["src/app/testws.component.ts:116",{"_index":408,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:21",{"_index":428,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:26",{"_index":424,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:31",{"_index":405,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:42",{"_index":418,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:54",{"_index":420,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:70",{"_index":410,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:82",{"_index":416,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:94",{"_index":422,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/web.service.ts",{"_index":484,"title":{},"body":{"coverage.html":{},"injectables/webService.html":{}}}],["src/app/web.service.ts:15",{"_index":684,"title":{},"body":{"injectables/webService.html":{}}}],["src/app/web.service.ts:29",{"_index":693,"title":{},"body":{"injectables/webService.html":{}}}],["src/app/web.service.ts:39",{"_index":691,"title":{},"body":{"injectables/webService.html":{}}}],["src/app/web.service.ts:44",{"_index":686,"title":{},"body":{"injectables/webService.html":{}}}],["src/app/web.service.ts:58",{"_index":695,"title":{},"body":{"injectables/webService.html":{}}}],["src/app/web.service.ts:69",{"_index":696,"title":{},"body":{"injectables/webService.html":{}}}],["src/app/web.service.ts:78",{"_index":688,"title":{},"body":{"injectables/webService.html":{}}}],["src/app/web.service.ts:83",{"_index":690,"title":{},"body":{"injectables/webService.html":{}}}],["standalone",{"_index":98,"title":{},"body":{"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{}}}],["stars",{"_index":453,"title":{},"body":{"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["start",{"_index":515,"title":{},"body":{"index.html":{}}}],["started",{"_index":508,"title":{"index.html":{}},"body":{}}],["statements",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":350,"title":{},"body":{"components/MoviesComponent.html":{}}}],["store",{"_index":545,"title":{},"body":{"index.html":{}}}],["stores",{"_index":348,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["storing",{"_index":336,"title":{},"body":{"components/MoviesComponent.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["structure",{"_index":641,"title":{},"body":{"components/movieComponent.html":{}}}],["styleurl",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["submission",{"_index":607,"title":{},"body":{"components/movieComponent.html":{}}}],["submit",{"_index":387,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["subscribe",{"_index":624,"title":{},"body":{"components/movieComponent.html":{}}}],["success",{"_index":363,"title":{},"body":{"components/MoviesComponent.html":{}}}],["successfully",{"_index":360,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["such",{"_index":539,"title":{},"body":{"index.html":{}}}],["suits",{"_index":566,"title":{},"body":{"index.html":{}}}],["sure",{"_index":632,"title":{},"body":{"components/movieComponent.html":{}}}],["table",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["tasks",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["test",{"_index":419,"title":{},"body":{"components/TestWSComponent.html":{},"index.html":{}}}],["test_output",{"_index":398,"title":{},"body":{"components/TestWSComponent.html":{}}}],["test_review",{"_index":452,"title":{},"body":{"components/TestWSComponent.html":{}}}],["test_review).subscribe",{"_index":456,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testgetmovie",{"_index":399,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testgetreviews",{"_index":400,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testing",{"_index":411,"title":{},"body":{"components/TestWSComponent.html":{},"index.html":{}}}],["testmoviesfetched",{"_index":401,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testpagesofmoviesaredifferent",{"_index":402,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testpostreview",{"_index":403,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testrunning",{"_index":558,"title":{},"body":{"index.html":{}}}],["tests",{"_index":407,"title":{},"body":{"components/TestWSComponent.html":{},"index.html":{}}}],["testws.component.html",{"_index":395,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testwscomponent",{"_index":90,"title":{"components/TestWSComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{}}}],["text",{"_index":177,"title":{},"body":{"injectables/Dataservice.html":{},"components/HomepageComponent.html":{}}}],["this.dataservice.getlastpagenumber",{"_index":383,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.dataservice.getloremipsum(1",{"_index":625,"title":{},"body":{"components/movieComponent.html":{}}}],["this.dataservice.getmovies(this.page",{"_index":355,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.dataservice.populatereviews",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this.first_movie_list",{"_index":439,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.first_movie_list[0]['_id",{"_index":442,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.formbuilder.group",{"_index":345,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["this.getloremipsum(1).subscribe",{"_index":238,"title":{},"body":{"injectables/Dataservice.html":{}}}],["this.http.delete",{"_index":716,"title":{},"body":{"injectables/webService.html":{}}}],["this.http.get",{"_index":230,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["this.http.post",{"_index":712,"title":{},"body":{"injectables/webService.html":{}}}],["this.isinvalid('comment",{"_index":656,"title":{},"body":{"components/movieComponent.html":{}}}],["this.isinvalid('director",{"_index":373,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.isinvalid('genre",{"_index":374,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.isinvalid('title",{"_index":372,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.isinvalid('username",{"_index":655,"title":{},"body":{"components/movieComponent.html":{}}}],["this.isuntouched",{"_index":375,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["this.loremipsum",{"_index":626,"title":{},"body":{"components/movieComponent.html":{}}}],["this.movie_list",{"_index":357,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["this.movieform",{"_index":344,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.movieform.controls.comment.pristine",{"_index":371,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.movieform.controls.username.pristine",{"_index":370,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.movieform.controls[control].invalid",{"_index":368,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.movieform.controls[control].touched",{"_index":369,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.movieid",{"_index":621,"title":{},"body":{"components/movieComponent.html":{}}}],["this.movies_list",{"_index":354,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.page",{"_index":352,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.pagesize",{"_index":218,"title":{},"body":{"injectables/Dataservice.html":{},"injectables/webService.html":{}}}],["this.review_list",{"_index":630,"title":{},"body":{"components/movieComponent.html":{}}}],["this.reviewform",{"_index":620,"title":{},"body":{"components/movieComponent.html":{}}}],["this.reviewform.controls.comment.pristine",{"_index":654,"title":{},"body":{"components/movieComponent.html":{}}}],["this.reviewform.controls.username.pristine",{"_index":653,"title":{},"body":{"components/movieComponent.html":{}}}],["this.reviewform.controls[control].invalid",{"_index":651,"title":{},"body":{"components/movieComponent.html":{}}}],["this.reviewform.controls[control].touched",{"_index":652,"title":{},"body":{"components/movieComponent.html":{}}}],["this.reviewform.reset",{"_index":650,"title":{},"body":{"components/movieComponent.html":{}}}],["this.reviewform.value",{"_index":649,"title":{},"body":{"components/movieComponent.html":{}}}],["this.reviewid",{"_index":628,"title":{},"body":{"components/movieComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":622,"title":{},"body":{"components/movieComponent.html":{}}}],["this.router.navigate(['/movies",{"_index":364,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["this.second_movie_list",{"_index":441,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.second_movie_list[0]['_id",{"_index":443,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.test_output.push(\"fetch",{"_index":449,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.test_output.push(\"page",{"_index":435,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.test_output.push(\"pages",{"_index":444,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.test_output.push(\"post",{"_index":457,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testgetmovie",{"_index":460,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testgetreviews",{"_index":461,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testmoviesfetched",{"_index":458,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testpagesofmoviesaredifferent",{"_index":459,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testpostreview",{"_index":462,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.webservice.addmovie(this.movieform.value).subscribe",{"_index":358,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.webservice.deletemovie(this.movieid).subscribe",{"_index":635,"title":{},"body":{"components/movieComponent.html":{}}}],["this.webservice.deletereview(this.movieid",{"_index":644,"title":{},"body":{"components/movieComponent.html":{}}}],["this.webservice.getmovie('672385f76b0bf9a991105444').subscribe",{"_index":446,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.webservice.getmovie(this.route.snapshot.parammap.get('id",{"_index":623,"title":{},"body":{"components/movieComponent.html":{}}}],["this.webservice.getmovies(1).subscribe",{"_index":431,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.webservice.getmovies(2).subscribe",{"_index":440,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.webservice.getmovies(this.page).subscribe",{"_index":356,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.webservice.getreviews('672385f76b0bf9a991105444').subscribe",{"_index":450,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.webservice.getreviews(this.route.snapshot.parammap.get('id",{"_index":629,"title":{},"body":{"components/movieComponent.html":{}}}],["this.webservice.postreview",{"_index":648,"title":{},"body":{"components/movieComponent.html":{}}}],["this.webservice.postreview('672385f76b0bf9a991105444",{"_index":455,"title":{},"body":{"components/TestWSComponent.html":{}}}],["through",{"_index":137,"title":{},"body":{"components/AuthorisationComponent.html":{}}}],["title",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/MoviesComponent.html":{}}}],["tools",{"_index":534,"title":{},"body":{"index.html":{}}}],["top",{"_index":253,"title":{},"body":{"components/HomepageComponent.html":{}}}],["track",{"_index":376,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["transform",{"_index":263,"title":{},"body":{"components/HomepageComponent.html":{}}}],["translate",{"_index":264,"title":{},"body":{"components/HomepageComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["true",{"_index":99,"title":{},"body":{"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"miscellaneous/variables.html":{}}}],["truews",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["tslib",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{},"miscellaneous/variables.html":{},"injectables/webService.html":{}}}],["unit",{"_index":552,"title":{},"body":{"index.html":{}}}],["up",{"_index":604,"title":{},"body":{"components/movieComponent.html":{}}}],["use",{"_index":175,"title":{},"body":{"injectables/Dataservice.html":{},"index.html":{},"components/movieComponent.html":{}}}],["used",{"_index":299,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["user",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["user.email",{"_index":119,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["user.name",{"_index":118,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["username",{"_index":307,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["users",{"_index":619,"title":{},"body":{"components/movieComponent.html":{}}}],["uses",{"_index":179,"title":{},"body":{"injectables/Dataservice.html":{}}}],["using",{"_index":291,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"index.html":{},"components/movieComponent.html":{}}}],["utilised",{"_index":323,"title":{},"body":{"components/MoviesComponent.html":{}}}],["validators",{"_index":341,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["validators.required",{"_index":346,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["value",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"miscellaneous/variables.html":{},"injectables/webService.html":{}}}],["var",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AuthUserComponent.html":{},"components/AuthorisationComponent.html":{},"components/HomepageComponent.html":{},"components/MoviesComponent.html":{},"components/NavigateComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["variable",{"_index":335,"title":{},"body":{"components/MoviesComponent.html":{},"coverage.html":{}}}],["variables",{"_index":672,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":293,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["version",{"_index":512,"title":{},"body":{"index.html":{},"properties.html":{}}}],["visit",{"_index":575,"title":{},"body":{"index.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/Dataservice.html":{},"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["volume",{"_index":168,"title":{},"body":{"injectables/Dataservice.html":{}}}],["want",{"_index":633,"title":{},"body":{"components/movieComponent.html":{}}}],["warning",{"_index":310,"title":{},"body":{"components/MoviesComponent.html":{},"components/movieComponent.html":{}}}],["web",{"_index":290,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["web.service",{"_index":340,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["webservice",{"_index":273,"title":{"injectables/webService.html":{}},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"components/movieComponent.html":{},"injectables/webService.html":{}}}],["welcome",{"_index":268,"title":{},"body":{"components/HomepageComponent.html":{}}}],["whenever",{"_index":527,"title":{},"body":{"index.html":{}}}],["whether",{"_index":306,"title":{},"body":{"components/MoviesComponent.html":{},"components/TestWSComponent.html":{},"components/movieComponent.html":{}}}],["window.location.reload",{"_index":647,"title":{},"body":{"components/movieComponent.html":{}}}],["within",{"_index":614,"title":{},"body":{"components/movieComponent.html":{}}}],["worst",{"_index":663,"title":{},"body":{"components/movieComponent.html":{}}}],["x",{"_index":234,"title":{},"body":{"injectables/Dataservice.html":{}}}],["zone.js",{"_index":505,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        outlining decorators that provide config metadata to determine how the component is processed\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                Dataservice\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                MoviesComponent\n                                NavigateComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: Dataservice)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                            the constructor for the dataservice\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        Dataservice\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injecting the dataservice\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:32\n                        \n                    \n\n\n            \n                \n                        calling the dataservice to generate dummy reviews for the movie\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'My movieFE'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    the title assigned to the application\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { MoviesComponent } from './movies.component'\nimport { NavigateComponent } from './navigate.component'\nimport { Dataservice } from './data.service';\n\n/**\n * outlining decorators that provide config metadata to determine how the component is processed\n */\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, MoviesComponent, NavigateComponent],\n  providers: [Dataservice],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\n\nexport class AppComponent {\n  /**\n   * the title assigned to the application\n  */\n  title = 'My movieFE';\n\n  /**\n   * the constructor for the dataservice\n   * @param dataService Injecting the dataservice\n   */\n  constructor(private dataService: Dataservice) {}\n/**\n * calling the dataservice to generate dummy reviews for the movie\n */\n    ngOnInit() {\n      this.dataService.populateReviews();\n    }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorisationComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'HomepageComponent', 'selector': 'homepage'},{'name': 'movieComponent', 'selector': 'movie'},{'name': 'MoviesComponent', 'selector': 'movies'},{'name': 'NavigateComponent', 'selector': 'navigation'},{'name': 'TestWSComponent', 'selector': 'trueWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthUserComponent.html":{"url":"components/AuthUserComponent.html","title":"component - AuthUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authUser.component.ts\n\n\n\n    \n        Description\n    \n    \n        outlining decorators that provide config metadata to determine how the component is processed\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                authUser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/authUser.component.ts:17\n                            \n                        \n\n                \n                    \n                            The constructor for the Authorisation Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                checks a user is authenticated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authUser.component.ts:22\n                        \n                    \n\n            \n                \n                    checks a user is authenticated\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { AuthService } from \"@auth0/auth0-angular\";\nimport { AsyncPipe } from \"@angular/common\";\nimport { CommonModule } from \"@angular/common\";\n\n/**\n * outlining decorators that provide config metadata to determine how the component is processed\n */\n@Component ( {\n  selector: 'user-profile',\n  templateUrl: 'authUser.component.html',\n  standalone: true,\n  imports: [AsyncPipe, CommonModule]\n})\n\n\nexport class AuthUserComponent {\n  /**\n   * The constructor for the Authorisation Service\n   * @param auth checks a user is authenticated\n   */\n  constructor(public auth: AuthService) {}\n}\n\n    \n\n    \n        \nCurrent User Details\n\n\n\n    {{ user.name }}\n    {{ user.email }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Current User Details    {{ user.name }}    {{ user.email }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorisationComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'HomepageComponent', 'selector': 'homepage'},{'name': 'movieComponent', 'selector': 'movie'},{'name': 'MoviesComponent', 'selector': 'movies'},{'name': 'NavigateComponent', 'selector': 'navigation'},{'name': 'TestWSComponent', 'selector': 'trueWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthorisationComponent.html":{"url":"components/AuthorisationComponent.html","title":"component - AuthorisationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthorisationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authorisation.component.ts\n\n\n\n    \n        Description\n    \n    \n        defining a set of components for user authentication\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            Router\n                \n            \n\n\n            \n                selector\n                auth-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                authorisation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    \n                                    Public\n                                document\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authorisation.component.ts:19\n                            \n                        \n\n                \n                    \n                            injecting dependencies for the authorisation component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                providing access to the document onject\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                handling user authentication\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                managing navigation through the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authorisation.component.ts:27\n                        \n                    \n\n            \n                \n                    handling user authentication\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(DOCUMENT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/authorisation.component.ts:26\n                        \n                    \n\n            \n                \n                    providing access to the document onject\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authorisation.component.ts:27\n                        \n                    \n\n            \n                \n                    managing navigation through the application\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { AuthService } from \"@auth0/auth0-angular\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { AsyncPipe } from \"@angular/common\";\nimport { CommonModule } from \"@angular/common\";\nimport { Router } from \"@angular/router\";\n\n/**\n * defining a set of components for user authentication\n */\n@Component({\n  selector: 'auth-button',\n  templateUrl: 'authorisation.component.html',\n  standalone: true,\n  imports: [AsyncPipe, CommonModule],\n  providers: [Router]\n})\n\nexport class AuthorisationComponent{\n  /**\n   * injecting dependencies for the authorisation component\n   * @param document providing access to the document onject\n   * @param auth handling user authentication\n   * @param router managing navigation through the application\n   */\n  constructor(@Inject(DOCUMENT) public document: Document,\n    public auth: AuthService, public router: Router) {}\n}\n\n    \n\n    \n        \n    \n          Log Out\n    \n\n\n\n    \n        Log In\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Log Out                Log In    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorisationComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'HomepageComponent', 'selector': 'homepage'},{'name': 'movieComponent', 'selector': 'movie'},{'name': 'MoviesComponent', 'selector': 'movies'},{'name': 'NavigateComponent', 'selector': 'navigation'},{'name': 'TestWSComponent', 'selector': 'trueWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthorisationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Dataservice.html":{"url":"injectables/Dataservice.html","title":"injectable - Dataservice","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Dataservice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The data Service provides access to the endpoints of the Movie Directory API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLastPageNumber\n                            \n                            \n                                getLoremIpsum\n                            \n                            \n                                getMovie\n                            \n                            \n                                getMovies\n                            \n                            \n                                populateReviews\n                            \n                            \n                                postReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/data.service.ts:17\n                            \n                        \n\n                \n                    \n                            The constructor for the Data Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injecting the HttpClient to the DataService class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLastPageNumber\n                        \n                    \n                \n            \n            \n                \ngetLastPageNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:40\n                        \n                    \n\n\n            \n                \n                        formula created to calculate the volume of movies per page\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                a set volume of movies per page\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoremIpsum\n                        \n                    \n                \n            \n            \n                \ngetLoremIpsum(paragraphs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:64\n                        \n                    \n\n\n            \n                \n                        use of an external API to generate dummy text data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                paragraphs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    uses an API to form a string of text for a movie description\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                a paragraph of text from Lorem Ipsum API\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovie\n                        \n                    \n                \n            \n            \n                \ngetMovie(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Fetch a single movie from the Movie Directory API\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the ID indentifies the movie requested\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                An Observable for the movie object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovies\n                        \n                    \n                \n            \n            \n                \ngetMovies(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:30\n                        \n                    \n\n\n            \n                \n                        fetches a collection of movies from the Movie Directory API\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the page requested\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable for the collection of movies\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateReviews\n                        \n                    \n                \n            \n            \n                \npopulateReviews()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:75\n                        \n                    \n\n\n            \n                \n                        function that uses the API call to form a dummy description for each individual Movie in the directory\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postReview\n                        \n                    \n                \n            \n            \n                \npostReview(id: any, review: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    a new ID that will be linked with the new review\n\n                                            \n                                        \n                                        \n                                                review\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new review to be added to the movies page\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/data.service.ts:17\n                        \n                    \n\n            \n                \n                    The default page size to be returned\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport jsonData from '../assets/moviecollection.json';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/**\n * The data Service provides access to the endpoints of the Movie Directory API\n */\n@Injectable( {\n  providedIn: 'root'\n})\n\nexport class Dataservice {\n   /**\n   * The default page size to be returned\n   */\n  pageSize: number = 5;\n\n   /**\n   * The constructor for the Data Service\n   * @param http Injecting the HttpClient to the DataService class\n   */\n  constructor(private http: HttpClient) {}\n\n/**\n *fetches a collection of movies from the Movie Directory API\n * @param page the page requested\n * @returns An Observable for the collection of movies\n */\n  getMovies(page: number) {\n    let pageStart = (page - 1) * this.pageSize;\n    let pageEnd = pageStart + this.pageSize;\n    return jsonData.slice(pageStart, pageEnd);\n  }\n\n/**\n * formula created to calculate the volume of movies per page\n * @returns a set volume of movies per page\n */\n  getLastPageNumber() {\n    return Math.ceil(jsonData.length / this.pageSize);\n  }\n\n/**\n *Fetch a single movie from the Movie Directory API\n * @param id the ID indentifies the movie requested\n * @returns An Observable for the movie object\n */\n  getMovie (id: any) {\n    let dataToReturn: any[] = [];\n    jsonData.forEach( function(movie){\n        if (movie['_id']['$oid'] == id) {\n            dataToReturn.push(movie)\n      }\n    })\n    return dataToReturn\n  }\n\n/**\n *use of an external API to generate dummy text data\n * @param paragraphs uses an API to form a string of text for a movie description\n * @returns a paragraph of text from Lorem Ipsum API\n */\n  getLoremIpsum(paragraphs: number): Observable {\n\n    let API_key = 'o1LlHDrpMx7YiXiE9hXwwQ==mrxycYUPUQJYXbj0';\n    return this.http.get(\n      'https://api.api-ninjas.com/v1/loremipsum?paragraphs=' + paragraphs,\n      { headers: { 'X-Api-Key': API_key}}\n    );\n  }\n/**\n * function that uses the API call to form a dummy description for each individual Movie in the directory\n */\n  populateReviews() {\n    let loremIpsum = \"\";\n    let dummyReview = {};\n\n    this.getLoremIpsum(1).subscribe( (response: any) => {\n      loremIpsum = response.text;\n\n      jsonData.forEach( function(movie){\n        let numReviews = Math.floor(Math.random() * 10);\n        for(var i=0; i\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomepageComponent.html":{"url":"components/HomepageComponent.html","title":"component - HomepageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomepageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/homepage.component.ts\n\n\n\n    \n        Description\n    \n    \n        defining a set of components for the homepage\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                homepage\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./homepage.component.html\n            \n\n\n\n            \n                styleUrl\n                ./homepage.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n/**\n * defining a set of components for the homepage\n */\n@Component({\n  selector: 'homepage',\n  imports: [RouterOutlet],\n  templateUrl: './homepage.component.html',\n  styleUrl: './homepage.component.css'\n})\nexport class HomepageComponent {}\n\n    \n\n    \n        \n\n\n\n.centered {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  text-align: center;\n  font-size:80px;\n  color: rgb(255, 255, 255);\n  transform: translate(-50%, -50%);\n}\n.centered2 {\n  position: absolute;\n  top: 60%;\n  left: 50%;\n  text-align: center;\n  font-size:30px;\n  color: rgb(255, 255, 255);\n  transform: translate(-50%, -50%);\n}\n\n\nMovie Directory\nWelcome\n\n\n\n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '.centered {  position: absolute;  top: 50%;  left: 50%;  text-align: center;  font-size:80px;  color: rgb(255, 255, 255);  transform: translate(-50%, -50%);}.centered2 {  position: absolute;  top: 60%;  left: 50%;  text-align: center;  font-size:30px;  color: rgb(255, 255, 255);  transform: translate(-50%, -50%);}Movie DirectoryWelcome  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorisationComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'HomepageComponent', 'selector': 'homepage'},{'name': 'movieComponent', 'selector': 'movie'},{'name': 'MoviesComponent', 'selector': 'movies'},{'name': 'NavigateComponent', 'selector': 'navigation'},{'name': 'TestWSComponent', 'selector': 'trueWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomepageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoviesComponent.html":{"url":"components/MoviesComponent.html","title":"component - MoviesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoviesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movies.component.ts\n\n\n\n    \n        Description\n    \n    \n        outlining decorators that provide config metadata to determine how the component is processed\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                Dataservice\n                                webService\n                \n            \n\n\n            \n                selector\n                movies\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterModule\n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./movies.component.html\n            \n\n\n\n            \n                styleUrl\n                ./movies.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dataService\n                            \n                            \n                                movie\n                            \n                            \n                                movie_list\n                            \n                            \n                                movieForm\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isIncomplete\n                            \n                            \n                                isInvalid\n                            \n                            \n                                isUntouched\n                            \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                previousPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: Dataservice, webService: webService, route: ActivatedRoute, router: Router, formBuilder: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/movies.component.ts:44\n                            \n                        \n\n                \n                    \n                            the constructor for the Web Service and data service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        Dataservice\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                using the data service to share data across the various components\n\n                                                        \n                                                \n                                                \n                                                        webService\n                                                  \n                                                        \n                                                                        webService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                using the web service to handle HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                shows details for movies and dynamic routes\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to create forms for the reviews\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                manages user authentication\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isIncomplete\n                        \n                    \n                \n            \n            \n                \nisIncomplete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movies.component.ts:128\n                        \n                    \n\n\n            \n                \n                        method to check whether a username or comment may be invalid\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                warning to the user of invalid or missing data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInvalid\n                        \n                    \n                \n            \n            \n                \nisInvalid(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movies.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUntouched\n                        \n                    \n                \n            \n            \n                \nisUntouched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movies.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPage\n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movies.component.ts:107\n                        \n                    \n\n\n            \n                \n                        implementing pagination for the method, checks the current page is less than the next possible page\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movies.component.ts:63\n                        \n                    \n\n\n            \n                \n                        utilised to load movies from the component and set current page\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movies.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousPage\n                        \n                    \n                \n            \n            \n                \npreviousPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movies.component.ts:96\n                        \n                    \n\n\n            \n                \n                        implementing pagination for managing the navigation of pages between movies\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movies.component.ts:59\n                        \n                    \n\n            \n                \n                    manages user authentication\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dataService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dataservice\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movies.component.ts:54\n                        \n                    \n\n            \n                \n                    using the data service to share data across the various components\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    title: '',\n    director: '',\n    genre: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/movies.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movie_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movies.component.ts:28\n                        \n                    \n\n            \n                \n                    variable for storing movies\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movies.component.ts:38\n                        \n                    \n\n            \n                \n                    variable for adding a new movie form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/movies.component.ts:33\n                        \n                    \n\n            \n                \n                    variable for pagination\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet, RouterModule, ActivatedRoute, Router} from '@angular/router';\nimport { Dataservice } from './data.service';\nimport { webService } from './web.service';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '@auth0/auth0-angular';\n\n/**\n * outlining decorators that provide config metadata to determine how the component is processed\n */\n@Component({\n  selector: 'movies',\n  standalone: true,\n  imports: [RouterOutlet, RouterModule, CommonModule, ReactiveFormsModule],\n  providers: [Dataservice, webService],\n  templateUrl: './movies.component.html',\n  styleUrl: './movies.component.css'\n})\n\n/**\n * defining the class for the movies component\n */\nexport class MoviesComponent {\n  /**\n   * variable for storing movies\n   */\n  movie_list: any;\n\n  /**\n   * variable for pagination\n   */\n  page: number = 1;\n\n  /**\n   * variable for adding a new movie form\n   */\n  movieForm: any;\n\n  movie: any = {\n    title: '',\n    director: '',\n    genre: ''\n  };\n\n  /**\n   * the constructor for the Web Service and data service\n   * @param dataService using the data service to share data across the various components\n   * @param webService using the web service to handle HTTP requests\n   * @param route shows details for movies and dynamic routes\n   * @param formBuilder service used to create forms for the reviews\n   * @param authService manages user authentication\n   */\n  constructor(public dataService: Dataservice,\n              private webService: webService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private formBuilder: FormBuilder,\n              public authService: AuthService) {}\n/**\n * utilised to load movies from the component and set current page\n */\n  ngOnInit() {\n    this.movieForm = this.formBuilder.group( {\n      title: [\"\", Validators.required],\n      director: [\"\", Validators.required],\n      genre: [\"\", Validators.required]\n    });\n    /**\n     * checks for page value and assigns value to the page and stores it in the session storage\n     */\n    if (sessionStorage['page']) {\n      this.page = Number(sessionStorage['page']);\n    }\n    //this.movies_list = this.dataService.getMovies(this.page);\n    this.webService.getMovies(this.page).subscribe( (response) => { this.movie_list = response; })\n  }\n\n  onSubmit() {\n    this.webService.addMovie(this.movieForm.value).subscribe(\n      (response) => {\n        console.log('Movie added successfully:', response);\n        // Redirect to the movie list or any other page after success\n        this.router.navigate(['/movies']);\n      },\n      (error) => {\n        console.error('Error adding movie:', error);\n        alert('There was an error adding the movie.');\n      }\n    );\n  }\n\n  /**\n   *implementing pagination for managing the navigation of pages between movies\n   */\n  previousPage() {\n    if (this.page > 1) {\n        this.page = this.page - 1;\n        sessionStorage['page'] = this.page;\n        this.webService.getMovies(this.page).subscribe( (response) => { this.movie_list = response; })\n    }\n  }\n\n  /**\n   *implementing pagination for the method, checks the current page is less than the next possible page\n   */\n  nextPage() {\n    if (this.page  { this.movie_list = response; })\n    }\n  }\n\n  isInvalid(control: any) {\n    return this.movieForm.controls[control].invalid && this.movieForm.controls[control].touched;\n  }\n\n  isUntouched() {\n    return this.movieForm.controls.username.pristine ||\n           this.movieForm.controls.comment.pristine;\n  }\n\n  /**\n   * method to check whether a username or comment may be invalid\n   * @returns warning to the user of invalid or missing data\n   */\n  isIncomplete() {\n    return this.isInvalid('title') ||\n           this.isInvalid('director') ||\n           this.isInvalid('genre') ||\n           this.isUntouched();\n  }\n\n }\n\n    \n\n    \n        \n\n  \n    \n      @for (movie of movie_list; track movie) {\n        \n          \n            {{movie.title}}\n          \n          \n            This movie is directed by\n            {{movie.director}}\n          \n          \n            Genre: {{movie.genre}}\n          \n        \n      }\n    \n  \n\n  \n      \n          \n              Previous\n          \n      \n      \n          showing page {{ this.page }}\n          of {{ this.dataService.getLastPageNumber() }}\n      \n      \n          \n              Next\n          \n      \n  \n\n  \n    \n        \n          \n              Create a New Movie Entry\n              \n                  \n                      Title\n                      \n                  \n                  \n                      Insert Director Below\n                      \n                      \n                  \n                  \n                    Insert Genre Below\n                    \n                            \n                  \n                  \n                          Submit\n                  \n              \n            \n\n            \n              \n                User Must Login to Review This Movie\n              \n            \n        \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @for (movie of movie_list; track movie) {                              {{movie.title}}                                This movie is directed by            {{movie.director}}                                Genre: {{movie.genre}}                        }                                      Previous                                showing page {{ this.page }}          of {{ this.dataService.getLastPageNumber() }}                                    Next                                                        Create a New Movie Entry                                                      Title                                                                                Insert Director Below                                                                                                    Insert Genre Below                                                                                                              Submit                                                                                      User Must Login to Review This Movie                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorisationComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'HomepageComponent', 'selector': 'homepage'},{'name': 'movieComponent', 'selector': 'movie'},{'name': 'MoviesComponent', 'selector': 'movies'},{'name': 'NavigateComponent', 'selector': 'navigation'},{'name': 'TestWSComponent', 'selector': 'trueWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoviesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigateComponent.html":{"url":"components/NavigateComponent.html","title":"component - NavigateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navigate.component.ts\n\n\n\n    \n        Description\n    \n    \n        outlining decorators that provide config metadata to determine how the component is processed\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                navigation\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterModule\n                                AuthorisationComponent\n                                AuthUserComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navigate.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet, RouterModule } from '@angular/router';\nimport { AuthorisationComponent } from './authorisation.component';\nimport { AuthUserComponent} from './authUser.component';\n\n/**\n * outlining decorators that provide config metadata to determine how the component is processed\n */\n@Component({\n  selector: 'navigation',\n  standalone: true,\n  imports: [RouterOutlet, RouterModule, AuthorisationComponent, AuthUserComponent],\n  templateUrl: './navigate.component.html'\n})\n\nexport class NavigateComponent { }\n\n    \n\n    \n        \n    \n        Movie Directory\n    \n    \n        \n            Home\n        \n        \n            Movies\n        \n        \n          User\n      \n    \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Movie Directory                            Home                            Movies                          User                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorisationComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'HomepageComponent', 'selector': 'homepage'},{'name': 'movieComponent', 'selector': 'movie'},{'name': 'MoviesComponent', 'selector': 'movies'},{'name': 'NavigateComponent', 'selector': 'navigation'},{'name': 'TestWSComponent', 'selector': 'trueWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestWSComponent.html":{"url":"components/TestWSComponent.html","title":"component - TestWSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TestWSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/testWS.component.ts\n\n\n\n    \n        Description\n    \n    \n        outlining decorators that provide config metadata to determine how the component is processed\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                webService\n                \n            \n\n\n            \n                selector\n                trueWS\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./testWS.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_movie_list\n                            \n                            \n                                second_movie_list\n                            \n                            \n                                test_output\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                testGetMovie\n                            \n                            \n                                    Private\n                                testGetReviews\n                            \n                            \n                                    Private\n                                testMoviesFetched\n                            \n                            \n                                    Private\n                                testPagesOfMoviesAreDifferent\n                            \n                            \n                                    Private\n                                testPostReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(webService: webService)\n                    \n                \n                        \n                            \n                                Defined in src/app/testWS.component.ts:31\n                            \n                        \n\n                \n                    \n                            The constructor for the Web Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        webService\n                                                  \n                                                        \n                                                                        webService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                using the web service to find the various methods linked to the tests below\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:116\n                        \n                    \n\n\n            \n                \n                        displaying the various methods assigned to the tests\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testGetMovie\n                        \n                    \n                \n            \n            \n                \n                        \n                    testGetMovie()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:70\n                        \n                    \n\n\n            \n                \n                        testing to check whether the frontend passes or fails on providing a specific movie by ID\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testGetReviews\n                        \n                    \n                \n            \n            \n                \n                        \n                    testGetReviews()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:82\n                        \n                    \n\n\n            \n                \n                        testing to check whether the frontend passes or fails on providing a specific review and ID by using their assigned ID's\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testMoviesFetched\n                        \n                    \n                \n            \n            \n                \n                        \n                    testMoviesFetched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:42\n                        \n                    \n\n\n            \n                \n                        a test to check whether the fetch all movies function passes or fails\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testPagesOfMoviesAreDifferent\n                        \n                    \n                \n            \n            \n                \n                        \n                    testPagesOfMoviesAreDifferent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:54\n                        \n                    \n\n\n            \n                \n                        testing to check whether the frontend passes or fails on providing different movies on various pages\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testPostReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    testPostReview()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:94\n                        \n                    \n\n\n            \n                \n                        testing to check whether the frontend passes or fails on posting a new review to the reviews collection\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        first_movie_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/testWS.component.ts:26\n                        \n                    \n\n            \n                \n                    used to find the first movie and identify it by ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        second_movie_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/testWS.component.ts:31\n                        \n                    \n\n            \n                \n                    used to find the second movie and identify it by ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test_output\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/testWS.component.ts:21\n                        \n                    \n\n            \n                \n                    test output stores the results for the components functionality\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { webService } from './web.service';\n\n/**\n * outlining decorators that provide config metadata to determine how the component is processed\n */\n@Component({\n  selector: 'trueWS',\n  standalone: true,\n  providers: [webService],\n  templateUrl: './testWS.component.html'\n})\n\n/**\n * defining various properties for the test component\n */\nexport class TestWSComponent{\n  /**\n   * test output stores the results for the components functionality\n   */\n  test_output: string[] = [];\n\n  /**\n   * used to find the first movie and identify it by ID\n   */\n  first_movie_list: any[] = [];\n\n  /**\n   * used to find the second movie and identify it by ID\n   */\n  second_movie_list: any[] = [];\n\n  /**\n   * The constructor for the Web Service\n   * @param webService using the web service to find the various methods linked to the tests below\n   */\n  constructor(private webService: webService) {}\n\n  /**\n   * a test to check whether the fetch all movies function passes or fails\n   */\n  private testMoviesFetched() {\n    this.webService.getMovies(1).subscribe( (response) => {\n      if(Array.isArray(response) && response.length == 4)\n        this.test_output.push(\"Page of movies fetched.. PASS\");\n      else\n        this.test_output.push(\"Page of movies fetched.. FAIL\");\n    })\n  }\n\n  /**\n   * testing to check whether the frontend passes or fails on providing different movies on various pages\n   */\n  private testPagesOfMoviesAreDifferent() {\n    this.webService.getMovies(1).subscribe( (response) => {\n      this.first_movie_list = response;\n      this.webService.getMovies(2).subscribe( (response) => {\n        this.second_movie_list = response;\n        if (this.first_movie_list[0]['_id'] != this.second_movie_list[0]['_id'])\n            this.test_output.push(\"Pages 1 and 2 are different.. PASS\");\n        else\n        this.test_output.push(\"Pages 1 and 2 are different.. FAIL\");\n      })\n    })\n  }\n\n  /**\n   * testing to check whether the frontend passes or fails on providing a specific movie by ID\n   */\n  private testGetMovie() {\n    this.webService.getMovie('672385f76b0bf9a991105444').subscribe ( (response) => {\n      if (response.title == 'scream')\n          this.test_output.push(\"Fetch Movie It by ID... PASS\");\n      else\n      this.test_output.push(\"Fetch Movie It by ID... FAIL\");\n    })\n  }\n\n  /**\n   * testing to check whether the frontend passes or fails on providing a specific review and ID by using their assigned ID's\n   */\n  private testGetReviews() {\n    this.webService.getReviews('672385f76b0bf9a991105444').subscribe ( (response) => {\n      if (Array.isArray(response))\n          this.test_output.push(\"Fetch reviews of scream... PASS\");\n      else\n          this.test_output.push(\"Fetch reviews of scream... FAIL\");\n    })\n  }\n\n  /**\n   * testing to check whether the frontend passes or fails on posting a new review to the reviews collection\n   */\n  private testPostReview(){\n    let test_review = {\n      \"username\" : \"test user\",\n      \"comment\" : \"test comment\",\n      \"stars\" : 5\n    };\n    this.webService.getReviews('672385f76b0bf9a991105444').subscribe( (response) => {\n      let num_reviews = response.length;\n      this.webService.postReview('672385f76b0bf9a991105444', test_review).subscribe( (response => {\n        this.webService.getReviews('672385f76b0bf9a991105444').subscribe( (response) => {\n          if (response.length == num_reviews + 1)\n              this.test_output.push(\"Post review to movie scream... PASS\")\n          else\n              this.test_output.push(\"Post review to movie scream... FAIL\")\n        })\n      }))\n    })\n  }\n\n  /**\n   * displaying the various methods assigned to the tests\n   */\n  ngOnInit() {\n    this.testMoviesFetched();\n    this.testPagesOfMoviesAreDifferent();\n    this.testGetMovie();\n    this.testGetReviews();\n    this.testPostReview();\n  }\n}\n\n    \n\n    \n        \n  \n    Test Report\n  \n\n  \n    @for(report of test_output; track report){\n      \n        {{report}}\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Test Report        @for(report of test_output; track report){              {{report}}          }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorisationComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'HomepageComponent', 'selector': 'homepage'},{'name': 'movieComponent', 'selector': 'movie'},{'name': 'MoviesComponent', 'selector': 'movies'},{'name': 'NavigateComponent', 'selector': 'navigation'},{'name': 'TestWSComponent', 'selector': 'trueWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TestWSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/authUser.component.ts\n            \n            component\n            AuthUserComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/authorisation.component.ts\n            \n            component\n            AuthorisationComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/data.service.ts\n            \n            injectable\n            Dataservice\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/homepage.component.ts\n            \n            component\n            HomepageComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/movie.component.ts\n            \n            component\n            movieComponent\n            \n                76 %\n                (13/17)\n            \n        \n        \n            \n                \n                src/app/movies.component.ts\n            \n            component\n            MoviesComponent\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                src/app/navigate.component.ts\n            \n            component\n            NavigateComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/testWS.component.ts\n            \n            component\n            TestWSComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/web.service.ts\n            \n            injectable\n            webService\n            \n                70 %\n                (7/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.0.0\n        \n            @angular/common : ^19.0.0\n        \n            @angular/compiler : ^19.0.0\n        \n            @angular/core : ^19.0.0\n        \n            @angular/forms : ^19.0.0\n        \n            @angular/platform-browser : ^19.0.0\n        \n            @angular/platform-browser-dynamic : ^19.0.0\n        \n            @angular/router : ^19.0.0\n        \n            @auth0/auth0-angular : ^2.2.3\n        \n            @compodoc/compodoc : ^1.1.26\n        \n            bootstrap : ^5.3.3\n        \n            jquery : ^3.7.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMovieFE\nThis project was generated using Angular CLI version 19.0.0.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/movieComponent.html":{"url":"components/movieComponent.html","title":"component - movieComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  movieComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movie.component.ts\n\n\n\n    \n        Description\n    \n    \n        defining a set of components for movie\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                Dataservice\n                                webService\n                \n            \n\n\n            \n                selector\n                movie\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./movie.component.html\n            \n\n\n\n            \n                styleUrl\n                ./movie.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dataService\n                            \n                            \n                                loremIpsum\n                            \n                            \n                                movie_list\n                            \n                            \n                                movieID\n                            \n                            \n                                review_list\n                            \n                            \n                                reviewForm\n                            \n                            \n                                reviewID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMovie\n                            \n                            \n                                deleteReview\n                            \n                            \n                                isIncomplete\n                            \n                            \n                                isInvalid\n                            \n                            \n                                isUntouched\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: Dataservice, webService: webService, route: ActivatedRoute, formBuilder: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/movie.component.ts:46\n                            \n                        \n\n                \n                    \n                            the constructors imported for the use of the movie component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        Dataservice\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                using the data service to share data across the various components\n\n                                                        \n                                                \n                                                \n                                                        webService\n                                                  \n                                                        \n                                                                        webService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                using the web service to handle HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                shows details for movies and dynamic routes\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to create forms for the reviews\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                manages user authentication\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMovie\n                        \n                    \n                \n            \n            \n                \ndeleteMovie()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReview\n                        \n                    \n                \n            \n            \n                \ndeleteReview(reviewID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isIncomplete\n                        \n                    \n                \n            \n            \n                \nisIncomplete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie.component.ts:161\n                        \n                    \n\n\n            \n                \n                        method to check whether a username or comment may be invalid\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                warning to the user of invalid or missing data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInvalid\n                        \n                    \n                \n            \n            \n                \nisInvalid(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie.component.ts:143\n                        \n                    \n\n\n            \n                \n                        method for checking review data interaction\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    checks whether the data is invalid or the review section has a missing field\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                warning to the user of missing field data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUntouched\n                        \n                    \n                \n            \n            \n                \nisUntouched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie.component.ts:152\n                        \n                    \n\n\n            \n                \n                        method to check whether the username or comment section has been interacted with\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                warning to the user of missing critical data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie.component.ts:67\n                        \n                    \n\n\n            \n                \n                        setting up controls for the review form data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie.component.ts:125\n                        \n                    \n\n\n            \n                \n                        setting up the method to handle the submission of review data for a movie\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie.component.ts:60\n                        \n                    \n\n            \n                \n                    manages user authentication\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dataService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dataservice\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie.component.ts:56\n                        \n                    \n\n            \n                \n                    using the data service to share data across the various components\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loremIpsum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie.component.ts:32\n                        \n                    \n\n            \n                \n                    provides the description for the movies in the application\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movie_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie.component.ts:27\n                        \n                    \n\n            \n                \n                    holds the list of movies displayed within the component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        review_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie.component.ts:42\n                        \n                    \n\n            \n                \n                    stores all reviews assigned to the movies\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reviewForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie.component.ts:37\n                        \n                    \n\n            \n                \n                    form allowing users to submit movie reviews\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reviewID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet, ActivatedRoute, Router } from '@angular/router';\nimport { Dataservice } from './data.service';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { webService } from './web.service';\n\n/**\n * defining a set of components for movie\n */\n@Component({\n  selector: 'movie',\n  imports: [RouterOutlet, CommonModule, ReactiveFormsModule],\n  providers: [Dataservice, webService],\n  templateUrl: './movie.component.html',\n  styleUrl: './movie.component.css'\n})\n\n\nexport class movieComponent {\n\n  /**\n   * holds the list of movies displayed within the component\n   */\n  movie_list: any;\n\n  /**\n   * provides the description for the movies in the application\n   */\n  loremIpsum: any;\n\n  /**\n   * form allowing users to submit movie reviews\n   */\n  reviewForm: any;\n\n  /**\n   * stores all reviews assigned to the movies\n   */\n  review_list: any;\n\n  movieID: any;\n\n  reviewID: any;\n\n  /**\n   * the constructors imported for the use of the movie component\n   * @param dataService using the data service to share data across the various components\n   * @param webService using the web service to handle HTTP requests\n   * @param route shows details for movies and dynamic routes\n   * @param formBuilder service used to create forms for the reviews\n   * @param authService manages user authentication\n   */\n  constructor( public dataService: Dataservice,\n               private webService: webService,\n               private route: ActivatedRoute,\n               private formBuilder: FormBuilder,\n               public authService: AuthService,\n               private router: Router) {}\n\n\n  /**\n   * setting up controls for the review form data\n   */\n  ngOnInit() {\n    this.reviewForm = this.formBuilder.group( {\n      username: [\"\", Validators.required],\n      comment: [\"\", Validators.required],\n      stars: 5\n    });\n    this.movieID = this.route.snapshot.paramMap.get('id');\n    this.webService.getMovie(this.route.snapshot.paramMap.get('id'))\n    .subscribe( (response) => {\n      this.movie_list = [response];\n\n        this.dataService.getLoremIpsum(1)\n      .subscribe( (response: any) => {\n        this.loremIpsum = response.text.slice(0,300)\n      });\n    });\n\n    this.reviewID = this.webService.getReviews(this.route.snapshot.paramMap.get('id'))\n    this.webService.getReviews(this.route.snapshot.paramMap.get('id'))\n    .subscribe( (response) => {\n      this.review_list = response;\n    });\n  }\n\n  deleteMovie(): void {\n    if (this.movieID && confirm('Are you sure you want to delete this movie?')) {\n      this.webService.deleteMovie(this.movieID).subscribe(\n        () => {\n          console.log('Movie deleted successfully');\n          // After deletion, navigate back to the movie list or homepage\n          this.router.navigate(['/movies']);  // Adjust this route based on your application structure\n        },\n        (error) => {\n          console.error('Error deleting movie:', error);\n          alert('There was an error deleting the movie.');\n        }\n      );\n    }\n  }\n\n  deleteReview(reviewID:string): void {\n    if (this.reviewID && confirm('Are you sure you want to delete this review?')) {\n      this.webService.deleteReview(this.movieID, reviewID).subscribe(\n        () => {\n          console.log('Review deleted successfully');\n          window.location.reload();\n        },\n        (error) => {\n          console.error('Error deleting review:', error);\n          alert('There was an error deleting the review.');\n        }\n      );\n    }\n  }\n\n  /**\n   * setting up the method to handle the submission of review data for a movie\n   */\n  onSubmit() {\n    this.webService.postReview(\n        this.route.snapshot.paramMap.get('id'),\n        this.reviewForm.value)\n        .subscribe( (response) => {\n          this.reviewForm.reset();\n          this.webService.getReviews(this.route.snapshot.paramMap.get('id'))\n            .subscribe( (response) => {\n              this.review_list = response;\n          });\n        });\n  }\n\n  /**\n   * method for checking review data interaction\n   * @param control checks whether the data is invalid or the review section has a missing field\n   * @returns warning to the user of missing field data\n   */\n  isInvalid(control: any) {\n    return this.reviewForm.controls[control].invalid && this.reviewForm.controls[control].touched;\n  }\n\n\n/**\n * method to check whether the username or comment section has been interacted with\n * @returns warning to the user of missing critical data\n */\n  isUntouched() {\n    return this.reviewForm.controls.username.pristine ||\n           this.reviewForm.controls.comment.pristine;\n  }\n\n  /**\n   * method to check whether a username or comment may be invalid\n   * @returns warning to the user of invalid or missing data\n   */\n  isIncomplete() {\n    return this.isInvalid('username') ||\n           this.isInvalid('comment') ||\n           this.isUntouched();\n  }\n}\n\n    \n\n    \n        \n    @for (movie of movie_list; track movie.title) {\n\n    \n      \n        \n          {{ movie.title}}\n        \n\n        \n        \n\n        Genre: {{movie.genre}}\n      \n\n      \n        Directed by: {{movie.director}}\n      \n    \n\n    \n    \n\n    \n      \n      Movie Brief: {{ loremIpsum }}\n      \n    \n\n    \n    \n\n    Delete Movie\n\n    \n        \n\n          @for ( review of review_list; track review) {\n\n            \n\n              \n                  {{ review.username}}\n              \n              \n                  {{ review.comment}}\n              \n              \n                  Rating: {{ review.stars}}\n              \n            \n            \n            Delete Review\n          \n          \n          \n          }\n\n        \n    \n  }\n\n\n\n    \n        \n          \n              Submit a Movie Review\n              \n                  \n                      Username\n                      \n                  \n                  \n                      Insert Comment Below\n                      \n                      \n                  \n                  \n                      \n                          Rate This Movie (1 = worst & 5 = best)\n                      \n                      \n                           1 Stars\n                           2 Stars\n                           3 Stars\n                           4 Stars\n                           5 Stars\n                      \n                  \n                  \n                      *Please fill out all fields*\n                  \n                  \n                          Submit\n                  \n              \n            \n\n            \n              \n                User Must Login to Review This Movie\n              \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (movie of movie_list; track movie.title) {                            {{ movie.title}}                                Genre: {{movie.genre}}                    Directed by: {{movie.director}}                                  Movie Brief: {{ loremIpsum }}                      Delete Movie                      @for ( review of review_list; track review) {                                            {{ review.username}}                                              {{ review.comment}}                                              Rating: {{ review.stars}}                                                  Delete Review                                        }              }                                    Submit a Movie Review                                                      Username                                                                                Insert Comment Below                                                                                                                                Rate This Movie (1 = worst & 5 = best)                                                                       1 Stars                           2 Stars                           3 Stars                           4 Stars                           5 Stars                                                                                *Please fill out all fields*                                                              Submit                                                                                      User Must Login to Review This Movie                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorisationComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'HomepageComponent', 'selector': 'homepage'},{'name': 'movieComponent', 'selector': 'movie'},{'name': 'MoviesComponent', 'selector': 'movies'},{'name': 'NavigateComponent', 'selector': 'navigation'},{'name': 'TestWSComponent', 'selector': 'trueWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'movieComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }),\n  provideRouter(routes),\n  provideHttpClient()\n]\n}\n                    \n                \n\n            \n                \n                    identifing providers for generalised tasks\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/webService.html":{"url":"injectables/webService.html","title":"injectable - webService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  webService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/web.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The Web Service provides access to the endpoints of the Movie Directory API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMovie\n                            \n                            \n                                deleteMovie\n                            \n                            \n                                deleteReview\n                            \n                            \n                                getMovie\n                            \n                            \n                                getMovies\n                            \n                            \n                                getReviews\n                            \n                            \n                                postReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/web.service.ts:15\n                            \n                        \n\n                \n                    \n                            The constructor for the Web Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injecting the HttpClient to the WebService class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMovie\n                        \n                    \n                \n            \n            \n                \naddMovie(movie: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                movie\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMovie\n                        \n                    \n                \n            \n            \n                \ndeleteMovie(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReview\n                        \n                    \n                \n            \n            \n                \ndeleteReview(id: any, reviewID: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reviewID\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovie\n                        \n                    \n                \n            \n            \n                \ngetMovie(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Fetch a single movie from the Movie Directory API\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identiier of the movie requested\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable for the movie object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovies\n                        \n                    \n                \n            \n            \n                \ngetMovies(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Fetch a page of movies from the Movie Directory API\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The page number requested\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable for the collection of movies\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReviews\n                        \n                    \n                \n            \n            \n                \ngetReviews(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Fetch the collection of reviews for a specific movie from the Movie Directory API\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identiier of the movie for which the reviews are requested\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable for the collection of reviews\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postReview\n                        \n                    \n                \n            \n            \n                \npostReview(id: any, review: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Add a review to the collection of the specified movie\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identifier of the movie for which the review is provided\n\n                                            \n                                        \n                                        \n                                                review\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The review to be added\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Obserable on an object containing a link to the new review\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/app/web.service.ts:15\n                        \n                    \n\n            \n                \n                    The default page size to be returned\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * The Web Service provides access to the endpoints of the Movie Directory API\n */\n\n@Injectable()\nexport class webService {\n\n  /**\n   * The default page size to be returned\n   */\n  pageSize: number = 4;\n\n  /**\n   * The constructor for the Web Service\n   * @param http Injecting the HttpClient to the WebService class\n   */\n  constructor(private http: HttpClient) {}\n\n/**\n * Fetch a page of movies from the Movie Directory API\n * @param page The page number requested\n * @returns An Observable for the collection of movies\n */\n\n  getMovies(page: number) {\n    return this.http.get(\n      'http://127.0.0.1:5000/api/v1.0/movies?pn=' + page + '&ps=' + this.pageSize);\n  }\n\n/**\n * Fetch a single movie from the Movie Directory API\n * @param id The identiier of the movie requested\n * @returns An Observable for the movie object\n */\n  getMovie( id: any){\n    return this.http.get(\n      'http://127.0.0.1:5000/api/v1.0/movies/' + id);\n  }\n\n  addMovie(movie:any): Observable{\n    let postData = new FormData();\n    postData.append(\"title\", movie.title);\n    postData.append(\"director\", movie.director);\n    postData.append(\"genre\", movie.genre);\n    return this.http.post(\n      'http://127.0.0.1:5000/api/v1.0/movies', postData);\n  }\n\n  /**\n   * Fetch the collection of reviews for a specific movie from the Movie Directory API\n   * @param id The identiier of the movie for which the reviews are requested\n   * @returns An Observable for the collection of reviews\n   */\n  getReviews( id: any){\n    return this.http.get(\n      'http://127.0.0.1:5000/api/v1.0/movies/' + id + '/reviews');\n  }\n\n  /**\n   * Add a review to the collection of the specified movie\n   * @param id The identifier of the movie for which the review is provided\n   * @param review The review to be added\n   * @returns An Obserable on an object containing a link to the new review\n   */\n  postReview(id: any, review: any) {\n    let postData = new FormData();\n    postData.append(\"username\", review.username);\n    postData.append(\"comment\", review.comment);\n    postData.append(\"stars\", review.stars);\n    return this.http.post (\n      'http://127.0.0.1:5000/api/v1.0/movies/' + id + '/reviews', postData);\n  }\n\n  deleteMovie( id: any){\n    return this.http.delete(\n      'http://127.0.0.1:5000/api/v1.0/movies/' + id);\n  }\n\n  deleteReview( id: any, reviewID:any){\n    return this.http.delete(\n      'http://127.0.0.1:5000/api/v1.0/movies/' + id + '/reviews/' + reviewID);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
